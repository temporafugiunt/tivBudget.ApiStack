/*
Deployment script for trackItsValue

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "trackItsValue"
:setvar DefaultFilePrefix "trackItsValue"
:setvar DefaultDataPath ""
:setvar DefaultLogPath ""

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ANSI_NULLS ON,
                ANSI_PADDING ON,
                ANSI_WARNINGS ON,
                ARITHABORT ON,
                CONCAT_NULL_YIELDS_NULL ON,
                QUOTED_IDENTIFIER ON,
                ANSI_NULL_DEFAULT ON,
                CURSOR_DEFAULT LOCAL 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET PAGE_VERIFY NONE,
                DISABLE_BROKER 
            WITH ROLLBACK IMMEDIATE;
    END


GO
ALTER DATABASE [$(DatabaseName)]
    SET TARGET_RECOVERY_TIME = 0 SECONDS 
    WITH ROLLBACK IMMEDIATE;


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET QUERY_STORE (CLEANUP_POLICY = (STALE_QUERY_THRESHOLD_DAYS = 367)) 
            WITH ROLLBACK IMMEDIATE;
    END


GO
PRINT N'Creating [tivSystem]...';


GO
CREATE LOGIN [tivSystem]
    WITH PASSWORD = N'Tqmvass}x?9y|>rpcqnzzkqXmsFT7_&#$!~<lIwro{cu{syp', SID = 0x6282D5F1E57AB84792293F7888B1F284, DEFAULT_LANGUAGE = [us_english], CHECK_EXPIRATION = ON;


GO
PRINT N'Creating [tivSystem]...';


GO
CREATE USER [tivSystem] FOR LOGIN [tivSystem];


GO
REVOKE CONNECT TO [tivSystem];


GO
PRINT N'Creating <unnamed>...';


GO
EXECUTE sp_addrolemember @rolename = N'db_owner', @membername = N'tivSystem';


GO
PRINT N'Creating [Applications]...';


GO
CREATE SCHEMA [Applications]
    AUTHORIZATION [dbo];


GO
PRINT N'Creating [freebyTrack]...';


GO
CREATE SCHEMA [freebyTrack]
    AUTHORIZATION [dbo];


GO
PRINT N'Creating [Lookups]...';


GO
CREATE SCHEMA [Lookups]
    AUTHORIZATION [dbo];


GO
PRINT N'Creating [Miscellaneous]...';


GO
CREATE SCHEMA [Miscellaneous]
    AUTHORIZATION [dbo];


GO
PRINT N'Creating [PublicContent]...';


GO
CREATE SCHEMA [PublicContent]
    AUTHORIZATION [dbo];


GO
PRINT N'Creating [Reports]...';


GO
CREATE SCHEMA [Reports]
    AUTHORIZATION [dbo];


GO
PRINT N'Creating [Resources]...';


GO
CREATE SCHEMA [Resources]
    AUTHORIZATION [dbo];


GO
PRINT N'Creating [Security]...';


GO
CREATE SCHEMA [Security]
    AUTHORIZATION [dbo];


GO
PRINT N'Creating [Applications].[Menus]...';


GO
CREATE TABLE [Applications].[Menus] (
    [ID]               UNIQUEIDENTIFIER NOT NULL,
    [MenuID]           INT              NOT NULL,
    [ApplicationID]    INT              NOT NULL,
    [Description]      NVARCHAR (128)   NOT NULL,
    [Icon]             NVARCHAR (50)    NULL,
    [ParentID]         UNIQUEIDENTIFIER NULL,
    [DisplayIndex]     INT              NOT NULL,
    [ngApp]            NVARCHAR (50)    NULL,
    [serverRoute]      NVARCHAR (50)    NULL,
    [ngRoute]          NVARCHAR (50)    NULL,
    [ShowSubMenu]      BIT              NOT NULL,
    [GroupAssociation] BIGINT           NOT NULL,
    [CreatedOn]        DATETIME         NOT NULL,
    [CreatedBy]        NVARCHAR (50)    NOT NULL,
    [ModifiedOn]       DATETIME         NULL,
    [ModifiedBy]       NVARCHAR (50)    NULL,
    [ts]               ROWVERSION       NOT NULL,
    CONSTRAINT [PK_Menus] PRIMARY KEY NONCLUSTERED ([ID] ASC),
    CONSTRAINT [IX_Menus] UNIQUE CLUSTERED ([ApplicationID] ASC, [ID] ASC),
    CONSTRAINT [UC_MenusApplicationIdDescription] UNIQUE NONCLUSTERED ([ApplicationID] ASC, [Description] ASC)
);


GO
PRINT N'Creating [freebyTrack].[Budgets]...';


GO
CREATE TABLE [freebyTrack].[Budgets] (
    [ID]                         UNIQUEIDENTIFIER NOT NULL,
    [Description]                NVARCHAR (128)   NOT NULL,
    [Year]                       INT              NOT NULL,
    [Month]                      INT              NOT NULL,
    [OwnerID]                    UNIQUEIDENTIFIER NOT NULL,
    [DisplayIndex]               INT              NOT NULL,
    [ActualIncome]               DECIMAL (18, 2)  NOT NULL,
    [EstimatedIncome]            DECIMAL (18, 2)  NOT NULL,
    [ActualMinusEstimatedIncome] DECIMAL (18, 2)  NOT NULL,
    [ActualSpending]             DECIMAL (18, 2)  NOT NULL,
    [EstimatedSpending]          DECIMAL (18, 2)  NOT NULL,
    [ActualRemaining]            DECIMAL (18, 2)  NOT NULL,
    [EstimatedRemaining]         DECIMAL (18, 2)  NOT NULL,
    [CreatedOn]                  DATETIME         NOT NULL,
    [CreatedBy]                  NVARCHAR (50)    NOT NULL,
    [ModifiedOn]                 DATETIME         NULL,
    [ModifiedBy]                 NVARCHAR (50)    NULL,
    [StartDate]                  DATE             NOT NULL,
    [ts]                         ROWVERSION       NOT NULL,
    CONSTRAINT [PK_Budgets] PRIMARY KEY NONCLUSTERED ([ID] ASC),
    CONSTRAINT [UC_BudgetsOwnerIDMonthYearDescription] UNIQUE CLUSTERED ([OwnerID] ASC, [Month] ASC, [Year] ASC, [Description] ASC)
);


GO
PRINT N'Creating [freebyTrack].[BudgetItemTemplates]...';


GO
CREATE TABLE [freebyTrack].[BudgetItemTemplates] (
    [ID]                            UNIQUEIDENTIFIER NOT NULL,
    [CategoryTemplateID]            UNIQUEIDENTIFIER NOT NULL,
    [Description]                   NVARCHAR (128)   NOT NULL,
    [OwnerID]                       UNIQUEIDENTIFIER NULL,
    [IsLinkable]                    BIT              NOT NULL,
    [LinkableAccountTypeID]         INT              NULL,
    [LinkableAccountTemplateID]     UNIQUEIDENTIFIER NULL,
    [IsTransferable]                BIT              NOT NULL,
    [TransferableAccountTypeID]     INT              NULL,
    [TransferableAccountTemplateID] UNIQUEIDENTIFIER NULL,
    [IsEnvelopeAllowed]             BIT              NOT NULL,
    [CreatedOn]                     DATETIME         NOT NULL,
    [CreatedBy]                     NVARCHAR (50)    NOT NULL,
    [ModifiedOn]                    DATETIME         NULL,
    [ModifiedBy]                    NVARCHAR (50)    NULL,
    [ts]                            ROWVERSION       NOT NULL,
    CONSTRAINT [PK_BudgetItemTemplates] PRIMARY KEY CLUSTERED ([ID] ASC),
    CONSTRAINT [UC_BudgetItemTemplates] UNIQUE NONCLUSTERED ([CategoryTemplateID] ASC, [OwnerID] ASC, [Description] ASC)
);


GO
PRINT N'Creating [freebyTrack].[BudgetItems]...';


GO
CREATE TABLE [freebyTrack].[BudgetItems] (
    [ID]                    UNIQUEIDENTIFIER NOT NULL,
    [ItemTemplateID]        UNIQUEIDENTIFIER NOT NULL,
    [CategoryID]            UNIQUEIDENTIFIER NOT NULL,
    [Description]           NVARCHAR (128)   NOT NULL,
    [AmountBudgeted]        DECIMAL (18, 2)  NOT NULL,
    [AreBudgetActualsOpen]  BIT              NOT NULL,
    [IsLinked]              BIT              NOT NULL,
    [DisplayIndex]          INT              NOT NULL,
    [ItemSpent]             DECIMAL (18, 2)  NOT NULL,
    [ItemRemaining]         DECIMAL (18, 2)  NOT NULL,
    [AccountLinkID]         UNIQUEIDENTIFIER NULL,
    [AccountCategoryLinkID] UNIQUEIDENTIFIER NULL,
    [RecurringSettingsID]   UNIQUEIDENTIFIER NULL,
    [AlertID]               UNIQUEIDENTIFIER NULL,
    [CreatedOn]             DATETIME         NOT NULL,
    [CreatedBy]             NVARCHAR (50)    NOT NULL,
    [ModifiedOn]            DATETIME         NULL,
    [ModifiedBy]            NVARCHAR (50)    NULL,
    [ts]                    ROWVERSION       NOT NULL,
    CONSTRAINT [PK_BudgetItems] PRIMARY KEY NONCLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating [freebyTrack].[BudgetItems].[CI_BudgetItemsCategory]...';


GO
CREATE CLUSTERED INDEX [CI_BudgetItemsCategory]
    ON [freebyTrack].[BudgetItems]([CategoryID] ASC);


GO
PRINT N'Creating [freebyTrack].[BudgetItemRecurringSettings]...';


GO
CREATE TABLE [freebyTrack].[BudgetItemRecurringSettings] (
    [ID]               UNIQUEIDENTIFIER NOT NULL,
    [DayDue]           INT              NULL,
    [FriendlyReminder] INT              NULL,
    [WarningReminder]  INT              NULL,
    [SendViaEmail]     BIT              NOT NULL,
    [SendViaText]      BIT              NOT NULL,
    [CreatedOn]        DATETIME         NOT NULL,
    [CreatedBy]        NVARCHAR (50)    NOT NULL,
    [ModifiedOn]       DATETIME         NULL,
    [ModifiedBy]       NVARCHAR (50)    NULL,
    [ts]               ROWVERSION       NOT NULL,
    CONSTRAINT [PK_BudgetItemRecurringSettings] PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating [freebyTrack].[BudgetItemAlerts]...';


GO
CREATE TABLE [freebyTrack].[BudgetItemAlerts] (
    [ID]           UNIQUEIDENTIFIER NOT NULL,
    [AlertType]    INT              NOT NULL,
    [Acknowledged] BIT              NOT NULL,
    [CreatedOn]    DATETIME         NOT NULL,
    [CreatedBy]    NVARCHAR (50)    NOT NULL,
    [ModifiedOn]   DATETIME         NULL,
    [ModifiedBy]   NVARCHAR (50)    NULL,
    [ts]           ROWVERSION       NOT NULL,
    CONSTRAINT [PK_BudgetAlerts] PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating [freebyTrack].[BudgetCategoryTemplates]...';


GO
CREATE TABLE [freebyTrack].[BudgetCategoryTemplates] (
    [ID]               UNIQUEIDENTIFIER NOT NULL,
    [Description]      NVARCHAR (128)   NOT NULL,
    [OwnerID]          UNIQUEIDENTIFIER NULL,
    [Icon]             NVARCHAR (50)    NOT NULL,
    [IsIncomeCategory] BIT              NOT NULL,
    [BackgroundColor]  NCHAR (9)        NOT NULL,
    [CreatedOn]        DATETIME         NOT NULL,
    [CreatedBy]        NVARCHAR (50)    NOT NULL,
    [ModifiedOn]       DATETIME         NULL,
    [ModifiedBy]       NVARCHAR (50)    NULL,
    [ts]               ROWVERSION       NOT NULL,
    CONSTRAINT [PK_BudgetCategoryTemplates] PRIMARY KEY CLUSTERED ([ID] ASC),
    CONSTRAINT [UC_BudgetCategoryTemplates] UNIQUE NONCLUSTERED ([OwnerID] ASC, [Description] ASC)
);


GO
PRINT N'Creating [freebyTrack].[BudgetCategories]...';


GO
CREATE TABLE [freebyTrack].[BudgetCategories] (
    [ID]                 UNIQUEIDENTIFIER NOT NULL,
    [CategoryTemplateID] UNIQUEIDENTIFIER NOT NULL,
    [Description]        NVARCHAR (128)   NOT NULL,
    [AreBudgetItemsOpen] BIT              NOT NULL,
    [BudgetID]           UNIQUEIDENTIFIER NOT NULL,
    [DisplayIndex]       INT              NOT NULL,
    [CategoryBudgeted]   DECIMAL (18, 2)  NOT NULL,
    [CategorySpent]      DECIMAL (18, 2)  NOT NULL,
    [CategoryRemaining]  DECIMAL (18, 2)  NOT NULL,
    [CreatedOn]          DATETIME         NOT NULL,
    [CreatedBy]          NVARCHAR (50)    NOT NULL,
    [ModifiedOn]         DATETIME         NULL,
    [ModifiedBy]         NVARCHAR (50)    NULL,
    [ts]                 ROWVERSION       NOT NULL,
    CONSTRAINT [PK_BudgetCategories] PRIMARY KEY NONCLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating [freebyTrack].[BudgetCategories].[CI_BudgetCategoriesBudget]...';


GO
CREATE CLUSTERED INDEX [CI_BudgetCategoriesBudget]
    ON [freebyTrack].[BudgetCategories]([BudgetID] ASC);


GO
PRINT N'Creating [freebyTrack].[BudgetActuals]...';


GO
CREATE TABLE [freebyTrack].[BudgetActuals] (
    [ID]                UNIQUEIDENTIFIER NOT NULL,
    [Description]       NVARCHAR (256)   NOT NULL,
    [Amount]            DECIMAL (18, 2)  NOT NULL,
    [RelevantOn]        DATE             NOT NULL,
    [ItemID]            UNIQUEIDENTIFIER NOT NULL,
    [IsLinked]          BIT              NOT NULL,
    [IsEnvelopeDeposit] BIT              NOT NULL,
    [DisplayIndex]      INT              NOT NULL,
    [CreatedOn]         DATETIME         NOT NULL,
    [CreatedBy]         NVARCHAR (50)    NOT NULL,
    [ModifiedOn]        DATETIME         NULL,
    [ModifiedBy]        NVARCHAR (50)    NULL,
    [ts]                ROWVERSION       NOT NULL,
    CONSTRAINT [PK_BudgetActuals] PRIMARY KEY NONCLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating [freebyTrack].[BudgetActuals].[CI_BudgetActualsItem]...';


GO
CREATE CLUSTERED INDEX [CI_BudgetActualsItem]
    ON [freebyTrack].[BudgetActuals]([ItemID] ASC);


GO
PRINT N'Creating [freebyTrack].[BudgetActuals].[IX_BudgetActuals_RelevantOn]...';


GO
CREATE NONCLUSTERED INDEX [IX_BudgetActuals_RelevantOn]
    ON [freebyTrack].[BudgetActuals]([RelevantOn] ASC);


GO
PRINT N'Creating [freebyTrack].[AccountTypes]...';


GO
CREATE TABLE [freebyTrack].[AccountTypes] (
    [ID]                          INT            NOT NULL,
    [DisplayIndex]                INT            NOT NULL,
    [DescriptionPlural]           NVARCHAR (128) NOT NULL,
    [DescriptionSingular]         NVARCHAR (128) NOT NULL,
    [PosLineItemShortDescription] NVARCHAR (10)  NOT NULL,
    [PosLineItemDescription]      NVARCHAR (50)  NOT NULL,
    [NegLineItemShortDescription] NVARCHAR (10)  NOT NULL,
    [NegLineItemDescription]      NVARCHAR (50)  NOT NULL,
    [CreatedOn]                   DATETIME       NOT NULL,
    [CreatedBy]                   NVARCHAR (128) NOT NULL,
    [ModifiedOn]                  DATETIME       NULL,
    [ModifiedBy]                  NVARCHAR (128) NULL,
    [ts]                          ROWVERSION     NOT NULL,
    CONSTRAINT [PK_AccountTypes] PRIMARY KEY CLUSTERED ([ID] ASC),
    CONSTRAINT [UC_AccountTypes_DescriptionPlural] UNIQUE NONCLUSTERED ([DescriptionPlural] ASC)
);


GO
PRINT N'Creating [freebyTrack].[AccountTemplates]...';


GO
CREATE TABLE [freebyTrack].[AccountTemplates] (
    [ID]              UNIQUEIDENTIFIER NOT NULL,
    [TypeID]          INT              NOT NULL,
    [Description]     NVARCHAR (128)   NOT NULL,
    [OwnerID]         UNIQUEIDENTIFIER NULL,
    [Icon]            NVARCHAR (50)    NOT NULL,
    [IsIncomeAccount] BIT              NOT NULL,
    [CreatedOn]       DATETIME         NOT NULL,
    [CreatedBy]       NVARCHAR (50)    NOT NULL,
    [ModifiedOn]      DATETIME         NULL,
    [ModifiedBy]      NVARCHAR (50)    NULL,
    [ts]              ROWVERSION       NOT NULL,
    CONSTRAINT [PK_AccountTemplates] PRIMARY KEY CLUSTERED ([ID] ASC),
    CONSTRAINT [UC_AccountTemplates] UNIQUE NONCLUSTERED ([OwnerID] ASC, [Description] ASC)
);


GO
PRINT N'Creating [freebyTrack].[Accounts]...';


GO
CREATE TABLE [freebyTrack].[Accounts] (
    [ID]                       UNIQUEIDENTIFIER NOT NULL,
    [AccountTemplateID]        UNIQUEIDENTIFIER NOT NULL,
    [AccountTypeID]            INT              NOT NULL,
    [Description]              NVARCHAR (128)   NOT NULL,
    [OwnerID]                  UNIQUEIDENTIFIER NOT NULL,
    [AreAccountCategoriesOpen] BIT              NOT NULL,
    [DisplayIndex]             INT              NOT NULL,
    [CreatedOn]                DATETIME         NOT NULL,
    [CreatedBy]                NVARCHAR (50)    NOT NULL,
    [ModifiedOn]               DATETIME         NULL,
    [ModifiedBy]               NVARCHAR (50)    NULL,
    [ts]                       ROWVERSION       NOT NULL,
    CONSTRAINT [PK_Accounts] PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating [freebyTrack].[AccountCategoryTemplates]...';


GO
CREATE TABLE [freebyTrack].[AccountCategoryTemplates] (
    [ID]                UNIQUEIDENTIFIER NOT NULL,
    [AccountTemplateID] UNIQUEIDENTIFIER NOT NULL,
    [Description]       NVARCHAR (128)   NOT NULL,
    [IsDefault]         BIT              NOT NULL,
    [OwnerID]           UNIQUEIDENTIFIER NULL,
    [Icon]              NVARCHAR (50)    NOT NULL,
    [BackgroundColor]   NCHAR (9)        NOT NULL,
    [CreatedOn]         DATETIME         NOT NULL,
    [CreatedBy]         NVARCHAR (50)    NOT NULL,
    [ModifiedOn]        DATETIME         NULL,
    [ModifiedBy]        NVARCHAR (50)    NULL,
    [ts]                ROWVERSION       NOT NULL,
    CONSTRAINT [PK_AccountCategoryTemplates] PRIMARY KEY CLUSTERED ([ID] ASC),
    CONSTRAINT [UC_AccountCategoryTemplates] UNIQUE NONCLUSTERED ([AccountTemplateID] ASC, [OwnerID] ASC, [Description] ASC)
);


GO
PRINT N'Creating [freebyTrack].[AccountCategories]...';


GO
CREATE TABLE [freebyTrack].[AccountCategories] (
    [ID]                    UNIQUEIDENTIFIER NOT NULL,
    [CategoryTemplateID]    UNIQUEIDENTIFIER NOT NULL,
    [Description]           NVARCHAR (128)   NOT NULL,
    [AreAccountActualsOpen] BIT              NOT NULL,
    [AccountID]             UNIQUEIDENTIFIER NOT NULL,
    [DisplayIndex]          INT              NOT NULL,
    [IsDefault]             BIT              NOT NULL,
    [CreatedOn]             DATETIME         NOT NULL,
    [CreatedBy]             NVARCHAR (50)    NOT NULL,
    [ModifiedOn]            DATETIME         NULL,
    [ModifiedBy]            NVARCHAR (50)    NULL,
    [ts]                    ROWVERSION       NOT NULL,
    CONSTRAINT [PK_AccountCategories] PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating [freebyTrack].[AccountActualTemplates]...';


GO
CREATE TABLE [freebyTrack].[AccountActualTemplates] (
    [ID]                    UNIQUEIDENTIFIER NOT NULL,
    [AccountTemplateID]     UNIQUEIDENTIFIER NOT NULL,
    [Description]           NVARCHAR (128)   NOT NULL,
    [IsDeposit]             BIT              NOT NULL,
    [IsDefault]             BIT              NOT NULL,
    [AllowRecurringAmount]  BIT              NOT NULL,
    [AllowRecurringPercent] BIT              NOT NULL,
    [AllowRecurringDay]     BIT              NULL,
    [OwnerID]               UNIQUEIDENTIFIER NULL,
    [CreatedOn]             DATETIME         NOT NULL,
    [CreatedBy]             NVARCHAR (50)    NOT NULL,
    [ModifiedOn]            DATETIME         NULL,
    [ModifiedBy]            NVARCHAR (50)    NULL,
    [ts]                    ROWVERSION       NOT NULL,
    CONSTRAINT [PK_AccountActualTemplates] PRIMARY KEY CLUSTERED ([ID] ASC),
    CONSTRAINT [UC_AccountActualTemplates] UNIQUE NONCLUSTERED ([AccountTemplateID] ASC, [OwnerID] ASC, [Description] ASC)
);


GO
PRINT N'Creating [freebyTrack].[AccountActuals]...';


GO
CREATE TABLE [freebyTrack].[AccountActuals] (
    [ID]                 UNIQUEIDENTIFIER NOT NULL,
    [ActualTemplateID]   UNIQUEIDENTIFIER NOT NULL,
    [BudgetActualLinkID] UNIQUEIDENTIFIER NULL,
    [CategoryID]         UNIQUEIDENTIFIER NOT NULL,
    [Description]        NVARCHAR (256)   NOT NULL,
    [RelevantOn]         DATE             NOT NULL,
    [Amount]             DECIMAL (18, 2)  NOT NULL,
    [IsLinked]           BIT              NOT NULL,
    [IsRecurring]        BIT              NOT NULL,
    [CreatedOn]          DATETIME         NOT NULL,
    [CreatedBy]          NVARCHAR (50)    NOT NULL,
    [ModifiedOn]         DATETIME         NULL,
    [ModifiedBy]         NVARCHAR (50)    NULL,
    [ts]                 ROWVERSION       NOT NULL,
    CONSTRAINT [PK_AccountActuals] PRIMARY KEY NONCLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating [freebyTrack].[AccountActualRecurrences]...';


GO
CREATE TABLE [freebyTrack].[AccountActualRecurrences] (
    [ID]               UNIQUEIDENTIFIER NOT NULL,
    [ActualTemplateID] UNIQUEIDENTIFIER NOT NULL,
    [AccountID]        UNIQUEIDENTIFIER NOT NULL,
    [Description]      NVARCHAR (256)   NOT NULL,
    [RelevantDay]      INT              NULL,
    [Amount]           DECIMAL (18, 2)  NULL,
    [Percent]          DECIMAL (5, 2)   NULL,
    [CreatedOn]        DATETIME         NOT NULL,
    [CreatedBy]        NVARCHAR (50)    NOT NULL,
    [ModifiedOn]       DATETIME         NULL,
    [ModifiedBy]       NVARCHAR (50)    NULL,
    [ts]               ROWVERSION       NOT NULL,
    CONSTRAINT [PK_AccountActualRecurrences] PRIMARY KEY NONCLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating [Lookups].[ReportCategories]...';


GO
CREATE TABLE [Lookups].[ReportCategories] (
    [ID]           INT           IDENTITY (1, 1) NOT NULL,
    [Name]         NVARCHAR (50) NOT NULL,
    [DisplayIndex] INT           NOT NULL,
    [CreatedOn]    DATETIME      NOT NULL,
    [CreatedBy]    NVARCHAR (50) NOT NULL,
    [ModifiedOn]   DATETIME      NULL,
    [ModifiedBy]   NVARCHAR (50) NULL,
    [ts]           ROWVERSION    NOT NULL,
    CONSTRAINT [PK_ReportCategories] PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating [Lookups].[Applications]...';


GO
CREATE TABLE [Lookups].[Applications] (
    [ID]         INT           NOT NULL,
    [Name]       NVARCHAR (50) NOT NULL,
    [CreatedOn]  DATETIME      NOT NULL,
    [CreatedBy]  NVARCHAR (50) NOT NULL,
    [ModifiedOn] DATETIME      NULL,
    [ModifiedBy] NVARCHAR (50) NULL,
    [ts]         ROWVERSION    NOT NULL,
    CONSTRAINT [PK_Applications] PRIMARY KEY CLUSTERED ([ID] ASC),
    CONSTRAINT [UC_Application_Name] UNIQUE NONCLUSTERED ([Name] ASC)
);


GO
PRINT N'Creating [Miscellaneous].[Configurations]...';


GO
CREATE TABLE [Miscellaneous].[Configurations] (
    [ApplicationID] INT            NOT NULL,
    [Name]          NVARCHAR (50)  NOT NULL,
    [Value]         NVARCHAR (MAX) NOT NULL,
    [CreatedOn]     DATETIME       NOT NULL,
    [CreatedBy]     NVARCHAR (50)  NOT NULL,
    [ModifiedOn]    DATETIME       NULL,
    [ModifiedBy]    NVARCHAR (50)  NULL,
    [ts]            ROWVERSION     NOT NULL,
    CONSTRAINT [PK_Configurations] PRIMARY KEY CLUSTERED ([ApplicationID] ASC, [Name] ASC)
);


GO
PRINT N'Creating [PublicContent].[PageContent]...';


GO
CREATE TABLE [PublicContent].[PageContent] (
    [ID]          UNIQUEIDENTIFIER NOT NULL,
    [PageName]    NVARCHAR (50)    NOT NULL,
    [PageSection] NVARCHAR (50)    NOT NULL,
    [HtmlContent] NVARCHAR (MAX)   NOT NULL,
    [Version]     INT              NOT NULL,
    [IsPublished] BIT              NOT NULL,
    [PublishedOn] DATETIME         NULL,
    [CreatedOn]   DATETIME         NOT NULL,
    [CreatedBy]   NVARCHAR (50)    NOT NULL,
    [ModifiedOn]  DATETIME         NULL,
    [ModifiedBy]  NVARCHAR (50)    NULL,
    [ts]          ROWVERSION       NOT NULL,
    CONSTRAINT [PK_PageContent] PRIMARY KEY CLUSTERED ([ID] ASC),
    CONSTRAINT [IX_PageContent] UNIQUE NONCLUSTERED ([PageName] ASC, [PageSection] ASC, [Version] ASC)
);


GO
PRINT N'Creating [PublicContent].[News]...';


GO
CREATE TABLE [PublicContent].[News] (
    [ID]          UNIQUEIDENTIFIER NOT NULL,
    [Title]       NVARCHAR (50)    NOT NULL,
    [Text]        NVARCHAR (MAX)   NOT NULL,
    [OwnerID]     UNIQUEIDENTIFIER NULL,
    [ItemType]    INT              NOT NULL,
    [IsPublished] BIT              NOT NULL,
    [PublishedOn] DATETIME         NULL,
    [CreatedOn]   DATETIME         NOT NULL,
    [CreatedBy]   NVARCHAR (50)    NOT NULL,
    [ModifiedOn]  DATETIME         NULL,
    [ModifiedBy]  NVARCHAR (50)    NULL,
    [ts]          ROWVERSION       NOT NULL,
    CONSTRAINT [PK_News] PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating [PublicContent].[Videos]...';


GO
CREATE TABLE [PublicContent].[Videos] (
    [ID]          UNIQUEIDENTIFIER NOT NULL,
    [Title]       NVARCHAR (128)   NOT NULL,
    [VideoEmbed]  NVARCHAR (1024)  NOT NULL,
    [Description] NVARCHAR (1024)  NOT NULL,
    [CategoryID]  UNIQUEIDENTIFIER NOT NULL,
    [CreatedOn]   DATETIME         NOT NULL,
    [CreatedBy]   NVARCHAR (50)    NOT NULL,
    [ModifiedOn]  DATETIME         NULL,
    [ModifiedBy]  NVARCHAR (50)    NULL,
    [ts]          ROWVERSION       NOT NULL,
    CONSTRAINT [PK_Videos] PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating [PublicContent].[VideoCategories]...';


GO
CREATE TABLE [PublicContent].[VideoCategories] (
    [ID]          UNIQUEIDENTIFIER NOT NULL,
    [Description] NVARCHAR (50)    NOT NULL,
    [CreatedOn]   DATETIME         NOT NULL,
    [CreatedBy]   NVARCHAR (50)    NOT NULL,
    [ModifiedOn]  DATETIME         NULL,
    [ModifiedBy]  NVARCHAR (50)    NULL,
    [ts]          ROWVERSION       NOT NULL,
    CONSTRAINT [PK_VideoCategories] PRIMARY KEY CLUSTERED ([ID] ASC),
    CONSTRAINT [IX_VideoCategories] UNIQUE NONCLUSTERED ([Description] ASC)
);


GO
PRINT N'Creating [PublicContent].[Quotes]...';


GO
CREATE TABLE [PublicContent].[Quotes] (
    [ID]        INT             NOT NULL,
    [Source]    NVARCHAR (50)   NOT NULL,
    [Text]      NVARCHAR (1024) NOT NULL,
    [CreatedOn] DATETIME        NOT NULL,
    [CreatedBy] NVARCHAR (50)   NOT NULL,
    CONSTRAINT [PK_Quotes] PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating [Reports].[Reports]...';


GO
CREATE TABLE [Reports].[Reports] (
    [ID]              UNIQUEIDENTIFIER NOT NULL,
    [CategoryID]      INT              NOT NULL,
    [Description]     NVARCHAR (100)   NOT NULL,
    [DisplayIndex]    INT              NOT NULL,
    [StoredProcedure] NVARCHAR (50)    NOT NULL,
    [ReportHelper]    NVARCHAR (200)   NOT NULL,
    [CreatedOn]       DATETIME         NOT NULL,
    [CreatedBy]       NVARCHAR (50)    NOT NULL,
    [ModifiedOn]      DATETIME         NULL,
    [ModifiedBy]      NVARCHAR (50)    NULL,
    [ts]              ROWVERSION       NOT NULL,
    CONSTRAINT [PK_Reports] PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating [Reports].[ReportControls]...';


GO
CREATE TABLE [Reports].[ReportControls] (
    [ID]           UNIQUEIDENTIFIER NOT NULL,
    [ReportID]     UNIQUEIDENTIFIER NOT NULL,
    [DisplayIndex] INT              NOT NULL,
    [Description]  NVARCHAR (50)    NOT NULL,
    [Html]         NVARCHAR (MAX)   NULL,
    [CreatedOn]    DATETIME         NOT NULL,
    [CreatedBy]    NVARCHAR (50)    NOT NULL,
    [ModifiedOn]   DATETIME         NULL,
    [ModifiedBy]   NVARCHAR (50)    NULL,
    [ts]           ROWVERSION       NOT NULL,
    CONSTRAINT [PK_ReportControls] PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating [Security].[UserSettings]...';


GO
CREATE TABLE [Security].[UserSettings] (
    [UserID]        UNIQUEIDENTIFIER NOT NULL,
    [ApplicationID] INT              NOT NULL,
    [Name]          NVARCHAR (50)    NOT NULL,
    [Value]         NVARCHAR (MAX)   NOT NULL,
    [IsCacheable]   BIT              NOT NULL,
    [IsWritable]    BIT              NOT NULL,
    [CreatedOn]     DATETIME         NOT NULL,
    [CreatedBy]     NVARCHAR (50)    NOT NULL,
    [ModifiedOn]    DATETIME         NULL,
    [ModifiedBy]    NVARCHAR (50)    NULL,
    [ts]            ROWVERSION       NOT NULL,
    CONSTRAINT [PK_UserSettings] PRIMARY KEY CLUSTERED ([Name] ASC, [UserID] ASC, [ApplicationID] ASC)
);


GO
PRINT N'Creating [Security].[Users]...';


GO
CREATE TABLE [Security].[Users] (
    [ID]                          UNIQUEIDENTIFIER NOT NULL,
    [UserName]                    NVARCHAR (50)    NOT NULL,
    [Email]                       NVARCHAR (256)   NOT NULL,
    [Password]                    NVARCHAR (128)   NOT NULL,
    [PasswordSalt]                NVARCHAR (128)   NOT NULL,
    [PasswordVersion]             SMALLINT         NOT NULL,
    [IsLocked]                    BIT              NOT NULL,
    [IsEnabled]                   BIT              NOT NULL,
    [ReenableToken]               UNIQUEIDENTIFIER NULL,
    [ResetPasswordToken]          UNIQUEIDENTIFIER NULL,
    [ResetPasswordTokenCreatedOn] DATETIME         NULL,
    [LastLoginDate]               DATETIME         NULL,
    [LastLoginToken]              UNIQUEIDENTIFIER NULL,
    [LastPasswordChangeDate]      DATETIME         NOT NULL,
    [LastLockoutDate]             DATETIME         NULL,
    [FailedPasswordAttemptCount]  SMALLINT         NOT NULL,
    [Notes]                       NVARCHAR (MAX)   NULL,
    [GroupAssociation]            BIGINT           NOT NULL,
    [CreatedOn]                   DATETIME         NOT NULL,
    [CreatedBy]                   NVARCHAR (50)    NOT NULL,
    [ModifiedOn]                  DATETIME         NULL,
    [ModifiedBy]                  NVARCHAR (50)    NULL,
    [ts]                          ROWVERSION       NOT NULL,
    CONSTRAINT [PK_Users] PRIMARY KEY CLUSTERED ([ID] ASC),
    CONSTRAINT [UC_UsersEmail] UNIQUE NONCLUSTERED ([Email] ASC),
    CONSTRAINT [UC_UsersUserName] UNIQUE NONCLUSTERED ([UserName] ASC)
);


GO
PRINT N'Creating [Security].[Groups]...';


GO
CREATE TABLE [Security].[Groups] (
    [ID]               BIGINT        NOT NULL,
    [Description]      NVARCHAR (50) NOT NULL,
    [IsNewUserDefault] BIT           NOT NULL,
    [CreatedOn]        DATETIME      NOT NULL,
    [CreatedBy]        NVARCHAR (50) NOT NULL,
    [ModifiedOn]       DATETIME      NULL,
    [ModifiedBy]       NVARCHAR (50) NULL,
    [ts]               ROWVERSION    NOT NULL,
    CONSTRAINT [PK_Groups] PRIMARY KEY CLUSTERED ([ID] ASC),
    CONSTRAINT [UC_GroupsDescription] UNIQUE NONCLUSTERED ([Description] ASC)
);


GO
PRINT N'Creating [Applications].[DF_Menus_ID]...';


GO
ALTER TABLE [Applications].[Menus]
    ADD CONSTRAINT [DF_Menus_ID] DEFAULT (newsequentialid()) FOR [ID];


GO
PRINT N'Creating [freebyTrack].[DF_Budgets_ID]...';


GO
ALTER TABLE [freebyTrack].[Budgets]
    ADD CONSTRAINT [DF_Budgets_ID] DEFAULT (newsequentialid()) FOR [ID];


GO
PRINT N'Creating [freebyTrack].[DF_BudgetItemTemplates_ID]...';


GO
ALTER TABLE [freebyTrack].[BudgetItemTemplates]
    ADD CONSTRAINT [DF_BudgetItemTemplates_ID] DEFAULT (newsequentialid()) FOR [ID];


GO
PRINT N'Creating [freebyTrack].[DF_BudgetItems_ID]...';


GO
ALTER TABLE [freebyTrack].[BudgetItems]
    ADD CONSTRAINT [DF_BudgetItems_ID] DEFAULT (newsequentialid()) FOR [ID];


GO
PRINT N'Creating [freebyTrack].[DF_BudgetItems_IsLinked]...';


GO
ALTER TABLE [freebyTrack].[BudgetItems]
    ADD CONSTRAINT [DF_BudgetItems_IsLinked] DEFAULT ((0)) FOR [IsLinked];


GO
PRINT N'Creating [freebyTrack].[DF_BudgetItemRecurringSettings_ID]...';


GO
ALTER TABLE [freebyTrack].[BudgetItemRecurringSettings]
    ADD CONSTRAINT [DF_BudgetItemRecurringSettings_ID] DEFAULT (newsequentialid()) FOR [ID];


GO
PRINT N'Creating [freebyTrack].[DF_BudgetItemAlerts_ID]...';


GO
ALTER TABLE [freebyTrack].[BudgetItemAlerts]
    ADD CONSTRAINT [DF_BudgetItemAlerts_ID] DEFAULT (newsequentialid()) FOR [ID];


GO
PRINT N'Creating [freebyTrack].[DF_BudgetCategoryTemplates_ID]...';


GO
ALTER TABLE [freebyTrack].[BudgetCategoryTemplates]
    ADD CONSTRAINT [DF_BudgetCategoryTemplates_ID] DEFAULT (newsequentialid()) FOR [ID];


GO
PRINT N'Creating [freebyTrack].[DF_BudgetCategories_ID]...';


GO
ALTER TABLE [freebyTrack].[BudgetCategories]
    ADD CONSTRAINT [DF_BudgetCategories_ID] DEFAULT (newsequentialid()) FOR [ID];


GO
PRINT N'Creating [freebyTrack].[DF_BudgetActuals_ID]...';


GO
ALTER TABLE [freebyTrack].[BudgetActuals]
    ADD CONSTRAINT [DF_BudgetActuals_ID] DEFAULT (newsequentialid()) FOR [ID];


GO
PRINT N'Creating [freebyTrack].[DF_BudgetActuals_IsLinked]...';


GO
ALTER TABLE [freebyTrack].[BudgetActuals]
    ADD CONSTRAINT [DF_BudgetActuals_IsLinked] DEFAULT ((0)) FOR [IsLinked];


GO
PRINT N'Creating [freebyTrack].[DF_AccountTemplates_ID]...';


GO
ALTER TABLE [freebyTrack].[AccountTemplates]
    ADD CONSTRAINT [DF_AccountTemplates_ID] DEFAULT (newsequentialid()) FOR [ID];


GO
PRINT N'Creating [freebyTrack].[DF_Accounts_ID]...';


GO
ALTER TABLE [freebyTrack].[Accounts]
    ADD CONSTRAINT [DF_Accounts_ID] DEFAULT (newsequentialid()) FOR [ID];


GO
PRINT N'Creating [freebyTrack].[DF_AccountCategoryTemplates_ID]...';


GO
ALTER TABLE [freebyTrack].[AccountCategoryTemplates]
    ADD CONSTRAINT [DF_AccountCategoryTemplates_ID] DEFAULT (newsequentialid()) FOR [ID];


GO
PRINT N'Creating [freebyTrack].[DF_AccountCategories_ID]...';


GO
ALTER TABLE [freebyTrack].[AccountCategories]
    ADD CONSTRAINT [DF_AccountCategories_ID] DEFAULT (newsequentialid()) FOR [ID];


GO
PRINT N'Creating [freebyTrack].[DF_AccountItemTemplates_ID]...';


GO
ALTER TABLE [freebyTrack].[AccountActualTemplates]
    ADD CONSTRAINT [DF_AccountItemTemplates_ID] DEFAULT (newsequentialid()) FOR [ID];


GO
PRINT N'Creating [freebyTrack].[DF_AccounItems_ID]...';


GO
ALTER TABLE [freebyTrack].[AccountActuals]
    ADD CONSTRAINT [DF_AccounItems_ID] DEFAULT (newsequentialid()) FOR [ID];


GO
PRINT N'Creating [freebyTrack].[DF_AccountActualRecurrences_ID]...';


GO
ALTER TABLE [freebyTrack].[AccountActualRecurrences]
    ADD CONSTRAINT [DF_AccountActualRecurrences_ID] DEFAULT (newsequentialid()) FOR [ID];


GO
PRINT N'Creating [PublicContent].[DF_PageContent_ID]...';


GO
ALTER TABLE [PublicContent].[PageContent]
    ADD CONSTRAINT [DF_PageContent_ID] DEFAULT (newsequentialid()) FOR [ID];


GO
PRINT N'Creating [PublicContent].[DF_PageContent_CreatedOn]...';


GO
ALTER TABLE [PublicContent].[PageContent]
    ADD CONSTRAINT [DF_PageContent_CreatedOn] DEFAULT (getdate()) FOR [CreatedOn];


GO
PRINT N'Creating [PublicContent].[DF_News_ID]...';


GO
ALTER TABLE [PublicContent].[News]
    ADD CONSTRAINT [DF_News_ID] DEFAULT (newsequentialid()) FOR [ID];


GO
PRINT N'Creating [PublicContent].[DF_News_CreatedOn]...';


GO
ALTER TABLE [PublicContent].[News]
    ADD CONSTRAINT [DF_News_CreatedOn] DEFAULT (getdate()) FOR [CreatedOn];


GO
PRINT N'Creating [PublicContent].[DF__Videos__ID__668030F6]...';


GO
ALTER TABLE [PublicContent].[Videos]
    ADD CONSTRAINT [DF__Videos__ID__668030F6] DEFAULT (newsequentialid()) FOR [ID];


GO
PRINT N'Creating [PublicContent].[DF__Videos__CreatedO__6774552F]...';


GO
ALTER TABLE [PublicContent].[Videos]
    ADD CONSTRAINT [DF__Videos__CreatedO__6774552F] DEFAULT (getdate()) FOR [CreatedOn];


GO
PRINT N'Creating unnamed constraint on [PublicContent].[VideoCategories]...';


GO
ALTER TABLE [PublicContent].[VideoCategories]
    ADD DEFAULT (newsequentialid()) FOR [ID];


GO
PRINT N'Creating [PublicContent].[DF_VideoCategories_CreatedOn]...';


GO
ALTER TABLE [PublicContent].[VideoCategories]
    ADD CONSTRAINT [DF_VideoCategories_CreatedOn] DEFAULT (getdate()) FOR [CreatedOn];


GO
PRINT N'Creating [PublicContent].[DF_Quotes_CreatedOn]...';


GO
ALTER TABLE [PublicContent].[Quotes]
    ADD CONSTRAINT [DF_Quotes_CreatedOn] DEFAULT (getdate()) FOR [CreatedOn];


GO
PRINT N'Creating [Reports].[DF__Reports__ID__02E7657A]...';


GO
ALTER TABLE [Reports].[Reports]
    ADD CONSTRAINT [DF__Reports__ID__02E7657A] DEFAULT (newsequentialid()) FOR [ID];


GO
PRINT N'Creating [Reports].[DF__ReportContro__ID__08A03ED0]...';


GO
ALTER TABLE [Reports].[ReportControls]
    ADD CONSTRAINT [DF__ReportContro__ID__08A03ED0] DEFAULT (newsequentialid()) FOR [ID];


GO
PRINT N'Creating [Security].[DF_Security.UserSettings_IsCachable]...';


GO
ALTER TABLE [Security].[UserSettings]
    ADD CONSTRAINT [DF_Security.UserSettings_IsCachable] DEFAULT ((1)) FOR [IsCacheable];


GO
PRINT N'Creating [Security].[DF_Security.UserSettings_IsWritable]...';


GO
ALTER TABLE [Security].[UserSettings]
    ADD CONSTRAINT [DF_Security.UserSettings_IsWritable] DEFAULT ((1)) FOR [IsWritable];


GO
PRINT N'Creating [Security].[DF_Users_ID]...';


GO
ALTER TABLE [Security].[Users]
    ADD CONSTRAINT [DF_Users_ID] DEFAULT (newsequentialid()) FOR [ID];


GO
PRINT N'Creating [Security].[DF_Security_IsLocked]...';


GO
ALTER TABLE [Security].[Users]
    ADD CONSTRAINT [DF_Security_IsLocked] DEFAULT ((0)) FOR [IsLocked];


GO
PRINT N'Creating [Security].[DF_Security_IsEnabled]...';


GO
ALTER TABLE [Security].[Users]
    ADD CONSTRAINT [DF_Security_IsEnabled] DEFAULT ((0)) FOR [IsEnabled];


GO
PRINT N'Creating [Security].[DF_Security_FailedPasswordAttemptCount]...';


GO
ALTER TABLE [Security].[Users]
    ADD CONSTRAINT [DF_Security_FailedPasswordAttemptCount] DEFAULT ((0)) FOR [FailedPasswordAttemptCount];


GO
PRINT N'Creating [Security].[DF_Users_GroupAssociation]...';


GO
ALTER TABLE [Security].[Users]
    ADD CONSTRAINT [DF_Users_GroupAssociation] DEFAULT ((1)) FOR [GroupAssociation];


GO
PRINT N'Creating [Applications].[FK_Menus_Applications]...';


GO
ALTER TABLE [Applications].[Menus] WITH NOCHECK
    ADD CONSTRAINT [FK_Menus_Applications] FOREIGN KEY ([ApplicationID]) REFERENCES [Lookups].[Applications] ([ID]);


GO
PRINT N'Creating [Applications].[FK_Menus_Menus]...';


GO
ALTER TABLE [Applications].[Menus] WITH NOCHECK
    ADD CONSTRAINT [FK_Menus_Menus] FOREIGN KEY ([ParentID]) REFERENCES [Applications].[Menus] ([ID]);


GO
PRINT N'Creating [freebyTrack].[FK_BudgetItemTemplates_AccountTemplates]...';


GO
ALTER TABLE [freebyTrack].[BudgetItemTemplates] WITH NOCHECK
    ADD CONSTRAINT [FK_BudgetItemTemplates_AccountTemplates] FOREIGN KEY ([LinkableAccountTemplateID]) REFERENCES [freebyTrack].[AccountTemplates] ([ID]);


GO
PRINT N'Creating [freebyTrack].[FK_BudgetItemTemplates_AccountTemplates1]...';


GO
ALTER TABLE [freebyTrack].[BudgetItemTemplates] WITH NOCHECK
    ADD CONSTRAINT [FK_BudgetItemTemplates_AccountTemplates1] FOREIGN KEY ([TransferableAccountTemplateID]) REFERENCES [freebyTrack].[AccountTemplates] ([ID]);


GO
PRINT N'Creating [freebyTrack].[FK_BudgetItemTemplates_AccountTypes]...';


GO
ALTER TABLE [freebyTrack].[BudgetItemTemplates] WITH NOCHECK
    ADD CONSTRAINT [FK_BudgetItemTemplates_AccountTypes] FOREIGN KEY ([LinkableAccountTypeID]) REFERENCES [freebyTrack].[AccountTypes] ([ID]);


GO
PRINT N'Creating [freebyTrack].[FK_BudgetItemTemplates_AccountTypes1]...';


GO
ALTER TABLE [freebyTrack].[BudgetItemTemplates] WITH NOCHECK
    ADD CONSTRAINT [FK_BudgetItemTemplates_AccountTypes1] FOREIGN KEY ([TransferableAccountTypeID]) REFERENCES [freebyTrack].[AccountTypes] ([ID]);


GO
PRINT N'Creating [freebyTrack].[FK_BudgetItemTemplates_BudgetCategoryTemplates]...';


GO
ALTER TABLE [freebyTrack].[BudgetItemTemplates] WITH NOCHECK
    ADD CONSTRAINT [FK_BudgetItemTemplates_BudgetCategoryTemplates] FOREIGN KEY ([CategoryTemplateID]) REFERENCES [freebyTrack].[BudgetCategoryTemplates] ([ID]);


GO
PRINT N'Creating [freebyTrack].[FK_BudgetItemTemplates_Users]...';


GO
ALTER TABLE [freebyTrack].[BudgetItemTemplates] WITH NOCHECK
    ADD CONSTRAINT [FK_BudgetItemTemplates_Users] FOREIGN KEY ([OwnerID]) REFERENCES [Security].[Users] ([ID]);


GO
PRINT N'Creating [freebyTrack].[FK_BudgetItems_AccountCategories]...';


GO
ALTER TABLE [freebyTrack].[BudgetItems] WITH NOCHECK
    ADD CONSTRAINT [FK_BudgetItems_AccountCategories] FOREIGN KEY ([AccountCategoryLinkID]) REFERENCES [freebyTrack].[AccountCategories] ([ID]);


GO
PRINT N'Creating [freebyTrack].[FK_BudgetItems_Accounts]...';


GO
ALTER TABLE [freebyTrack].[BudgetItems] WITH NOCHECK
    ADD CONSTRAINT [FK_BudgetItems_Accounts] FOREIGN KEY ([AccountLinkID]) REFERENCES [freebyTrack].[Accounts] ([ID]);


GO
PRINT N'Creating [freebyTrack].[FK_BudgetItems_BudgetCategories]...';


GO
ALTER TABLE [freebyTrack].[BudgetItems] WITH NOCHECK
    ADD CONSTRAINT [FK_BudgetItems_BudgetCategories] FOREIGN KEY ([CategoryID]) REFERENCES [freebyTrack].[BudgetCategories] ([ID]) ON DELETE CASCADE;


GO
PRINT N'Creating [freebyTrack].[FK_BudgetItems_BudgetItemAlerts]...';


GO
ALTER TABLE [freebyTrack].[BudgetItems] WITH NOCHECK
    ADD CONSTRAINT [FK_BudgetItems_BudgetItemAlerts] FOREIGN KEY ([AlertID]) REFERENCES [freebyTrack].[BudgetItemAlerts] ([ID]);


GO
PRINT N'Creating [freebyTrack].[FK_BudgetItems_BudgetItemRecurringSettings]...';


GO
ALTER TABLE [freebyTrack].[BudgetItems] WITH NOCHECK
    ADD CONSTRAINT [FK_BudgetItems_BudgetItemRecurringSettings] FOREIGN KEY ([RecurringSettingsID]) REFERENCES [freebyTrack].[BudgetItemRecurringSettings] ([ID]);


GO
PRINT N'Creating [freebyTrack].[FK_BudgetItems_BudgetItemTemplates]...';


GO
ALTER TABLE [freebyTrack].[BudgetItems] WITH NOCHECK
    ADD CONSTRAINT [FK_BudgetItems_BudgetItemTemplates] FOREIGN KEY ([ItemTemplateID]) REFERENCES [freebyTrack].[BudgetItemTemplates] ([ID]);


GO
PRINT N'Creating [freebyTrack].[FK_BudgetCategoryTemplates_Users]...';


GO
ALTER TABLE [freebyTrack].[BudgetCategoryTemplates] WITH NOCHECK
    ADD CONSTRAINT [FK_BudgetCategoryTemplates_Users] FOREIGN KEY ([OwnerID]) REFERENCES [Security].[Users] ([ID]);


GO
PRINT N'Creating [freebyTrack].[FK_BudgetCategories_Budget]...';


GO
ALTER TABLE [freebyTrack].[BudgetCategories] WITH NOCHECK
    ADD CONSTRAINT [FK_BudgetCategories_Budget] FOREIGN KEY ([BudgetID]) REFERENCES [freebyTrack].[Budgets] ([ID]) ON DELETE CASCADE;


GO
PRINT N'Creating [freebyTrack].[FK_BudgetCategories_BudgetCategoryTemplates]...';


GO
ALTER TABLE [freebyTrack].[BudgetCategories] WITH NOCHECK
    ADD CONSTRAINT [FK_BudgetCategories_BudgetCategoryTemplates] FOREIGN KEY ([CategoryTemplateID]) REFERENCES [freebyTrack].[BudgetCategoryTemplates] ([ID]);


GO
PRINT N'Creating [freebyTrack].[FK_BudgetActuals_BudgetItems]...';


GO
ALTER TABLE [freebyTrack].[BudgetActuals] WITH NOCHECK
    ADD CONSTRAINT [FK_BudgetActuals_BudgetItems] FOREIGN KEY ([ItemID]) REFERENCES [freebyTrack].[BudgetItems] ([ID]) ON DELETE CASCADE;


GO
PRINT N'Creating [freebyTrack].[FK_AccountTemplates_AccountTypes]...';


GO
ALTER TABLE [freebyTrack].[AccountTemplates] WITH NOCHECK
    ADD CONSTRAINT [FK_AccountTemplates_AccountTypes] FOREIGN KEY ([TypeID]) REFERENCES [freebyTrack].[AccountTypes] ([ID]);


GO
PRINT N'Creating [freebyTrack].[FK_AccountTemplates_Users]...';


GO
ALTER TABLE [freebyTrack].[AccountTemplates] WITH NOCHECK
    ADD CONSTRAINT [FK_AccountTemplates_Users] FOREIGN KEY ([OwnerID]) REFERENCES [Security].[Users] ([ID]);


GO
PRINT N'Creating [freebyTrack].[FK_Accounts_AccountTemplates]...';


GO
ALTER TABLE [freebyTrack].[Accounts] WITH NOCHECK
    ADD CONSTRAINT [FK_Accounts_AccountTemplates] FOREIGN KEY ([AccountTemplateID]) REFERENCES [freebyTrack].[AccountTemplates] ([ID]);


GO
PRINT N'Creating [freebyTrack].[FK_Accounts_AccountTypes]...';


GO
ALTER TABLE [freebyTrack].[Accounts] WITH NOCHECK
    ADD CONSTRAINT [FK_Accounts_AccountTypes] FOREIGN KEY ([AccountTypeID]) REFERENCES [freebyTrack].[AccountTypes] ([ID]);


GO
PRINT N'Creating [freebyTrack].[FK_Accounts_Users]...';


GO
ALTER TABLE [freebyTrack].[Accounts] WITH NOCHECK
    ADD CONSTRAINT [FK_Accounts_Users] FOREIGN KEY ([OwnerID]) REFERENCES [Security].[Users] ([ID]);


GO
PRINT N'Creating [freebyTrack].[FK_AccountCategoryTemplates_AccountTemplates]...';


GO
ALTER TABLE [freebyTrack].[AccountCategoryTemplates] WITH NOCHECK
    ADD CONSTRAINT [FK_AccountCategoryTemplates_AccountTemplates] FOREIGN KEY ([AccountTemplateID]) REFERENCES [freebyTrack].[AccountTemplates] ([ID]);


GO
PRINT N'Creating [freebyTrack].[FK_AccountCategoryTemplates_Users]...';


GO
ALTER TABLE [freebyTrack].[AccountCategoryTemplates] WITH NOCHECK
    ADD CONSTRAINT [FK_AccountCategoryTemplates_Users] FOREIGN KEY ([OwnerID]) REFERENCES [Security].[Users] ([ID]);


GO
PRINT N'Creating [freebyTrack].[FK_AccountCategories_AccountCategoryTemplates]...';


GO
ALTER TABLE [freebyTrack].[AccountCategories] WITH NOCHECK
    ADD CONSTRAINT [FK_AccountCategories_AccountCategoryTemplates] FOREIGN KEY ([CategoryTemplateID]) REFERENCES [freebyTrack].[AccountCategoryTemplates] ([ID]);


GO
PRINT N'Creating [freebyTrack].[FK_AccountCategories_Accounts]...';


GO
ALTER TABLE [freebyTrack].[AccountCategories] WITH NOCHECK
    ADD CONSTRAINT [FK_AccountCategories_Accounts] FOREIGN KEY ([AccountID]) REFERENCES [freebyTrack].[Accounts] ([ID]) ON DELETE CASCADE;


GO
PRINT N'Creating [freebyTrack].[FK_AccountActualTemplates_AccountTemplates]...';


GO
ALTER TABLE [freebyTrack].[AccountActualTemplates] WITH NOCHECK
    ADD CONSTRAINT [FK_AccountActualTemplates_AccountTemplates] FOREIGN KEY ([AccountTemplateID]) REFERENCES [freebyTrack].[AccountTemplates] ([ID]);


GO
PRINT N'Creating [freebyTrack].[FK_AccountActualTemplates_Users]...';


GO
ALTER TABLE [freebyTrack].[AccountActualTemplates] WITH NOCHECK
    ADD CONSTRAINT [FK_AccountActualTemplates_Users] FOREIGN KEY ([OwnerID]) REFERENCES [Security].[Users] ([ID]);


GO
PRINT N'Creating [freebyTrack].[FK_AccountActuals_AccountActualTemplates]...';


GO
ALTER TABLE [freebyTrack].[AccountActuals] WITH NOCHECK
    ADD CONSTRAINT [FK_AccountActuals_AccountActualTemplates] FOREIGN KEY ([ActualTemplateID]) REFERENCES [freebyTrack].[AccountActualTemplates] ([ID]);


GO
PRINT N'Creating [freebyTrack].[FK_AccountActuals_AccountCategories]...';


GO
ALTER TABLE [freebyTrack].[AccountActuals] WITH NOCHECK
    ADD CONSTRAINT [FK_AccountActuals_AccountCategories] FOREIGN KEY ([CategoryID]) REFERENCES [freebyTrack].[AccountCategories] ([ID]) ON DELETE CASCADE;


GO
PRINT N'Creating [freebyTrack].[FK_AccountActuals_BudgetActuals]...';


GO
ALTER TABLE [freebyTrack].[AccountActuals] WITH NOCHECK
    ADD CONSTRAINT [FK_AccountActuals_BudgetActuals] FOREIGN KEY ([BudgetActualLinkID]) REFERENCES [freebyTrack].[BudgetActuals] ([ID]) ON DELETE CASCADE;


GO
PRINT N'Creating [freebyTrack].[FK_AccountActualRecurrences_AccountActualTemplates]...';


GO
ALTER TABLE [freebyTrack].[AccountActualRecurrences] WITH NOCHECK
    ADD CONSTRAINT [FK_AccountActualRecurrences_AccountActualTemplates] FOREIGN KEY ([ActualTemplateID]) REFERENCES [freebyTrack].[AccountActualTemplates] ([ID]);


GO
PRINT N'Creating [freebyTrack].[FK_AccountActualRecurrences_Accounts]...';


GO
ALTER TABLE [freebyTrack].[AccountActualRecurrences] WITH NOCHECK
    ADD CONSTRAINT [FK_AccountActualRecurrences_Accounts] FOREIGN KEY ([AccountID]) REFERENCES [freebyTrack].[Accounts] ([ID]) ON DELETE CASCADE;


GO
PRINT N'Creating [Miscellaneous].[FK_Configurations_Applications]...';


GO
ALTER TABLE [Miscellaneous].[Configurations] WITH NOCHECK
    ADD CONSTRAINT [FK_Configurations_Applications] FOREIGN KEY ([ApplicationID]) REFERENCES [Lookups].[Applications] ([ID]);


GO
PRINT N'Creating [PublicContent].[FK_News_Users]...';


GO
ALTER TABLE [PublicContent].[News] WITH NOCHECK
    ADD CONSTRAINT [FK_News_Users] FOREIGN KEY ([OwnerID]) REFERENCES [Security].[Users] ([ID]);


GO
PRINT N'Creating [PublicContent].[FK_Videos_VideoCategories]...';


GO
ALTER TABLE [PublicContent].[Videos] WITH NOCHECK
    ADD CONSTRAINT [FK_Videos_VideoCategories] FOREIGN KEY ([CategoryID]) REFERENCES [PublicContent].[VideoCategories] ([ID]);


GO
PRINT N'Creating [Reports].[FK_Reports_ReportCategories]...';


GO
ALTER TABLE [Reports].[Reports] WITH NOCHECK
    ADD CONSTRAINT [FK_Reports_ReportCategories] FOREIGN KEY ([CategoryID]) REFERENCES [Lookups].[ReportCategories] ([ID]);


GO
PRINT N'Creating [Reports].[FK_ReportControls_Reports]...';


GO
ALTER TABLE [Reports].[ReportControls] WITH NOCHECK
    ADD CONSTRAINT [FK_ReportControls_Reports] FOREIGN KEY ([ReportID]) REFERENCES [Reports].[Reports] ([ID]);


GO
PRINT N'Creating [Security].[FK_UserSettings_Applications]...';


GO
ALTER TABLE [Security].[UserSettings] WITH NOCHECK
    ADD CONSTRAINT [FK_UserSettings_Applications] FOREIGN KEY ([ApplicationID]) REFERENCES [Lookups].[Applications] ([ID]);


GO
PRINT N'Creating [Security].[FK_UserSettings_Users]...';


GO
ALTER TABLE [Security].[UserSettings] WITH NOCHECK
    ADD CONSTRAINT [FK_UserSettings_Users] FOREIGN KEY ([UserID]) REFERENCES [Security].[Users] ([ID]);


GO
PRINT N'Creating [freebyTrack].[Accounting_GetCategoryBalance]...';


GO
-- =============================================
-- Author:		James Eby
-- Create date: 4-10-2014
-- Description:	Returns the balance of an account
--				category up to and including the
--				given date.
-- =============================================
CREATE FUNCTION [freebyTrack].[Accounting_GetCategoryBalance]
(
	@AccountCategoryID uniqueidentifier,
	@EndingDate date
)
RETURNS decimal(18, 2)
AS
BEGIN
	-- Declare the return variable here
	DECLARE @sumOfDeposits AS decimal(18, 2)
	DECLARE @sumOfWithdrawls AS decimal(18, 2)

	SELECT @sumOfDeposits = ISNULL(SUM(aa.Amount), 0)
	FROM freebyTrack.AccountActuals aa
	INNER JOIN freebyTrack.AccountActualTemplates aat ON aa.ActualTemplateID = aat.ID
	WHERE aa.CategoryID = @AccountCategoryID AND aa.RelevantOn <= @EndingDate AND aat.IsDeposit = 1
	
	SELECT @sumOfWithdrawls = ISNULL(SUM(aa.Amount), 0)
	FROM freebyTrack.AccountActuals aa
	INNER JOIN freebyTrack.AccountActualTemplates aat ON aa.ActualTemplateID = aat.ID
	WHERE aa.CategoryID = @AccountCategoryID AND aa.RelevantOn <= @EndingDate AND aat.IsDeposit = 0
	
	RETURN @sumOfDeposits - @sumOfWithdrawls
END
GO
PRINT N'Creating [freebyTrack].[Accounting_GetAccountBalance]...';


GO

-- =============================================
-- Author:		James Eby
-- Create date: 4-10-2014
-- Description:	Returns the balance of an account
--				up to and including the given
--				date.
-- =============================================
CREATE FUNCTION [freebyTrack].[Accounting_GetAccountBalance]
(
	@AccountID uniqueidentifier,
	@EndingDate date
)
RETURNS decimal(18, 2)
AS
BEGIN
	-- Declare the return variable here
	DECLARE @sumOfDeposits AS decimal(18, 2)
	DECLARE @sumOfWithdrawls AS decimal(18, 2)

	SELECT @sumOfDeposits = ISNULL(SUM(aa.Amount), 0)
	FROM freebyTrack.AccountActuals aa
	INNER JOIN freebyTrack.AccountCategories ac ON aa.CategoryID = ac.ID
	INNER JOIN freebyTrack.AccountActualTemplates aat ON aa.ActualTemplateID = aat.ID
	WHERE ac.AccountID = @AccountID AND aa.RelevantOn <= @EndingDate AND aat.IsDeposit = 1
	
	SELECT @sumOfWithdrawls = ISNULL(SUM(aa.Amount), 0)
	FROM freebyTrack.AccountActuals aa
	INNER JOIN freebyTrack.AccountCategories ac ON aa.CategoryID = ac.ID
	INNER JOIN freebyTrack.AccountActualTemplates aat ON aa.ActualTemplateID = aat.ID
	WHERE ac.AccountID = @AccountID AND aa.RelevantOn <= @EndingDate AND aat.IsDeposit = 0
	
	RETURN @sumOfDeposits - @sumOfWithdrawls
END
GO
PRINT N'Creating [freebyTrack].[Budgeting_GetActualsByRelevantOnForDateRange]...';


GO
-- =============================================
-- Author:		James Eby
-- Create date: 10-27-2015
-- Description:	Retrieves all budget actuals from 
-- all budgets for a given month / year.
-- =============================================
CREATE PROCEDURE [freebyTrack].[Budgeting_GetActualsByRelevantOnForDateRange]
	@OwnerID uniqueidentifier,
	@RelevantStartDate date,
	@RelevantEndDate date
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;
  
    SELECT ba.ID, ba.Description, ba.Amount, ba.RelevantOn, ba.IsEnvelopeDeposit, bct.Icon, bct.IsIncomeCategory as IsDeposit,
		bi.ID as ItemID, bi.Description as ItemDescription, bi.AmountBudgeted as ItemAmountBudgeted, 
		bc.ID as CategoryID, bc.Description as CategoryDescription, 
		b.ID as BudgetID, b.Description as BudgetDescription, b.Month as BudgetMonth, b.Year as BudgetYear
    FROM freebyTrack.BudgetActuals ba
    INNER JOIN freebyTrack.BudgetItems bi ON ba.ItemID = bi.ID
    INNER JOIN freebyTrack.BudgetCategories bc ON bi.CategoryID = bc.ID
    INNER JOIN freebyTrack.BudgetCategoryTemplates bct ON bc.CategoryTemplateID = bct.ID
    INNER JOIN freebyTrack.Budgets b ON bc.BudgetID = b.ID
    WHERE b.OwnerID = @OwnerID and ba.RelevantOn BETWEEN @RelevantStartDate AND @RelevantEndDate
    ORDER BY ba.RelevantOn
END
GO
PRINT N'Creating [freebyTrack].[Accounting_GetCurrentBalanceForAccountCategories]...';


GO
-- =============================================
-- Author:		James Eby
-- Create date: 8-31-2014
-- Description:	Retrieves the current balance for
--              all account categories for
--				an individual account up to and
--				including the given date.
-- =============================================
CREATE PROCEDURE [freebyTrack].[Accounting_GetCurrentBalanceForAccountCategories]
	@OwnerID uniqueidentifier,
	@CurrentValueDate date,
	@AccountID uniqueidentifier
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;
  
    SELECT ac.ID, freebyTrack.Accounting_GetCategoryBalance(ac.ID, @CurrentValueDate) as CurrentBalance
    FROM freebyTrack.Accounts a
    INNER JOIN freebyTrack.AccountCategories ac ON a.ID = ac.AccountID
    WHERE a.OwnerID = @OwnerID AND (@AccountID = a.ID)
    ORDER BY a.DisplayIndex, ac.DisplayIndex
END
GO
PRINT N'Creating [freebyTrack].[Accounting_GetCurrentBalanceAllAccounts]...';


GO
-- =============================================
-- Author:		James Eby
-- Create date: 4-10-2014
-- Description:	Retrieves the current balance for
--              all accounts up to and
--				including the given date.
-- =============================================
CREATE PROCEDURE [freebyTrack].[Accounting_GetCurrentBalanceAllAccounts]
	@OwnerID uniqueidentifier,
	@CurrentValueDate date,
	@AccountTypeId int = NULL
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;
  
    SELECT a.ID, SUM(freebyTrack.Accounting_GetCategoryBalance(ac.ID, @CurrentValueDate)) as CurrentBalance
    FROM freebyTrack.Accounts a
    INNER JOIN freebyTrack.AccountCategories ac ON a.ID = ac.AccountID
    WHERE a.OwnerID = @OwnerID AND ((@AccountTypeId IS NULL) OR (@AccountTypeID = a.AccountTypeID))
    GROUP BY a.ID
END
GO
PRINT N'Creating [freebyTrack].[Accounting_GetCurrentBalanceAllAccountCategories]...';


GO
-- =============================================
-- Author:		James Eby
-- Create date: 4-10-2014
-- Description:	Retrieves the current balance for
--              all account categories up to and
--				including the given date.
-- =============================================
CREATE PROCEDURE [freebyTrack].[Accounting_GetCurrentBalanceAllAccountCategories]
	@OwnerID uniqueidentifier,
	@CurrentValueDate date,
	@AccountTypeId int = NULL
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;
  
    SELECT ac.ID, freebyTrack.Accounting_GetCategoryBalance(ac.ID, @CurrentValueDate) as CurrentBalance
    FROM freebyTrack.Accounts a
    INNER JOIN freebyTrack.AccountCategories ac ON a.ID = ac.AccountID
    WHERE a.OwnerID = @OwnerID AND ((@AccountTypeId IS NULL) OR (@AccountTypeID = a.AccountTypeID))
    ORDER BY a.DisplayIndex, ac.DisplayIndex
END
GO
PRINT N'Creating [Reports].[Budgeting_ItemsInCategoryForDateRange]...';


GO
-- =============================================
-- Author:		Eun Eby
-- Create date: 08-07-2014
-- Description:	Get Line Item by Category
--
-- Updated:		Eun & James Eby / 8-15-2014
-- Description:	Updated format to be useful for
--				HighCharts.
--
-- Updated:		James Eby / 8-31-2014
-- Description:	Added more summation data.
-- =============================================
CREATE PROCEDURE [Reports].[Budgeting_ItemsInCategoryForDateRange]
	@UserId UNIQUEIDENTIFIER,
	@BudgetCategoryTemplateId UNIQUEIDENTIFIER,
	@StartDate DATE,
	@EndDate DATE
AS
BEGIN
	SET NOCOUNT ON;
	SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;
 
	DECLARE @TempBudget AS TABLE(
		BudgetId UNIQUEIDENTIFIER,
		DateKey NVARCHAR(8),
		DisplayDate NVARCHAR(8)) 

	DECLARE @StartYearMoth NVARCHAR(6)=(CAST(YEAR(@StartDate) AS NCHAR(4)) + RIGHT('00' + LTRIM(MONTH(@StartDate)),2)) 
	DECLARE @EndYearMonth NVARCHAR(6)=(CAST(YEAR(@EndDate) AS NCHAR(4)) + RIGHT('00' + LTRIM(MONTH(@EndDate)),2)) 


	--capture records by given userid and insert into temp table
	INSERT INTO @TempBudget
	SELECT 
		ID,  
		CAST([Year] AS NVARCHAR)+ RIGHT('00' + LTRIM([Month]),2),
		RIGHT('00' + LTRIM([Month]),2) +'/' +CAST([Year] AS NVARCHAR)
	FROM [freebyTrack].[Budgets] B
	WHERE OwnerID=@UserId
 
	DECLARE @totalSpent DECIMAL(18, 2)
	SELECT @totalSpent = SUM(BC.CategorySpent)
	FROM [freebyTrack].[BudgetCategoryTemplates] BCT 
		JOIN [freebyTrack].[BudgetCategories] BC
			ON BCT.[ID]=BC.CategoryTemplateID
		JOIN @TempBudget TB
			ON TB.BudgetId=BC.BudgetID
	WHERE BCT.[ID]=@BudgetCategoryTemplateId
		AND TB.DateKey BETWEEN @StartYearMoth AND @EndYearMonth 

	DECLARE @Subtitle AS NVARCHAR(128);
	SET @Subtitle = 'Between ' + DATENAME(m, @StartDate) + ' of ' + DATENAME(yyyy, @StartDate) + ' and ' + DATENAME(m, @EndDate) + ' of ' + DATENAME(yyyy, @EndDate)
 
	DECLARE @bctDescription NVARCHAR(50);
	SELECT @bctDescription = BCT.[Description]
	FROM [freebyTrack].[BudgetCategoryTemplates] BCT 
	WHERE BCT.[ID]=@BudgetCategoryTemplateId
 
	(
	SELECT 'Total Spending for ' + @bctDescription + ' by Month' as Title, @SubTitle as Subtitle, 0 as DisplayIndex
	UNION
	SELECT 'Breakdown of Spending for ' + @bctDescription + ' by Month' as Title, @SubTitle as Subtitle, 1 as DisplayIndex
	UNION
	SELECT 'Overall ' + @bctDescription + ' Spending by Item' as Title, CAST(@totalSpent as NVARCHAR(18)) + ' Spent ' + @SubTitle as Subtitle, 2 as DisplayIndex
	) ORDER BY DisplayIndex
     
    
	SELECT  DateKey, DisplayDate
	FROM @TempBudget T
	WHERE T.DateKey BETWEEN @StartYearMoth AND @EndYearMonth 
	GROUP BY DateKey, DisplayDate

	SELECT 
		TB.DateKey,
		--TB.Category,
		'All ' + BCT.[Description] + ' Spending' as 'Description',
		BC.CategorySpent AS Amount,
		CAST(CAST(0 AS BINARY) AS UNIQUEIDENTIFIER) AS ID
	FROM [freebyTrack].[BudgetCategoryTemplates] BCT 
		JOIN [freebyTrack].[BudgetCategories] BC
			ON BCT.[ID]=BC.CategoryTemplateID
		JOIN @TempBudget TB
			ON TB.BudgetId=BC.BudgetID
	WHERE BCT.[ID]=@BudgetCategoryTemplateId
		AND TB.DateKey BETWEEN @StartYearMoth AND @EndYearMonth 
	
	
	SELECT 
		TB.DateKey,
		--TB.Category,
		BT.[Description],
		SUM(BI.[ItemSpent]) AS Amount,
		BT.ID 
	FROM [freebyTrack].[BudgetCategoryTemplates] BCT 
		JOIN [freebyTrack].[BudgetCategories] BC
			ON BCT.[ID]=BC.CategoryTemplateID
		JOIN [freebyTrack].[BudgetItems] BI
			ON BI.CategoryID=BC.[ID]
		JOIN [freebyTrack].[BudgetItemTemplates] BT
			ON BI.ItemTemplateID=BT.[ID]
		JOIN @TempBudget TB
			ON TB.BudgetId=BC.BudgetID
	WHERE BCT.[ID]=@BudgetCategoryTemplateId
		AND TB.DateKey BETWEEN @StartYearMoth AND @EndYearMonth
	GROUP BY TB.DateKey, BT.[Description], BT.[ID]
	ORDER BY BT.ID, TB.DateKey
	

END
GO
PRINT N'Creating [Reports].[Budgeting_IncomeAndSpendingForDateRange]...';


GO
-- =============================================
-- Author:		Eun Eby
-- Create date: 9/3/2014
-- Description:	Retreives the running surplus or
-- deficit for budgets within the given date
-- range.
-- =============================================
CREATE PROCEDURE [Reports].[Budgeting_IncomeAndSpendingForDateRange]
	@UserId UNIQUEIDENTIFIER,
	@StartDate DATE,
	@EndDate DATE
AS
BEGIN
	SET NOCOUNT ON;
	SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;
     
	DECLARE @TempBudget AS TABLE(
		DateKey NVARCHAR(8),
		DisplayDate NVARCHAR(8),
		ActualIncome DECIMAL(18,2),
		ActualSpending DECIMAL(18,2)) 

	DECLARE @StartYearMoth NVARCHAR(6)=(CAST(YEAR(@StartDate) AS NCHAR(4)) + RIGHT('00' + LTRIM(MONTH(@StartDate)),2)) 
	DECLARE @EndYearMonth NVARCHAR(6)=(CAST(YEAR(@EndDate) AS NCHAR(4)) + RIGHT('00' + LTRIM(MONTH(@EndDate)),2)) 

	--capture records by given userid and insert into temp table
	INSERT INTO @TempBudget
	SELECT 
		CAST([Year] AS NVARCHAR)+ RIGHT('00' + LTRIM([Month]),2),
		RIGHT('00' + LTRIM([Month]),2) +'/' +CAST([Year] AS NVARCHAR),
		ActualIncome,
		ActualSpending
	FROM [freebyTrack].[Budgets] B
	WHERE OwnerID=@UserId
 
	DECLARE @Subtitle AS NVARCHAR(128);
	SET @Subtitle = 'Between ' + DATENAME(m, @StartDate) + ' of ' + DATENAME(yyyy, @StartDate) + ' and ' + DATENAME(m, @EndDate) + ' of ' + DATENAME(yyyy, @EndDate)
 
	DECLARE @SubTitlePart nvarchar(50)
	
	(
	SELECT 'Total Budget Income and Spending by Month' as Title, @SubTitle as Subtitle, 0 as DisplayIndex
	UNION
	SELECT 'Surplus or Deficit by Month' as Title, @SubTitle as Subtitle, 1 as DisplayIndex
	UNION
	SELECT 'Overall Budget Income and Spending' as Title, @SubTitle as Subtitle, 2 as DisplayIndex
	)
	ORDER BY DisplayIndex
 
	SELECT  T.DateKey, T.DisplayDate
	FROM @TempBudget T
	WHERE T.DateKey BETWEEN @StartYearMoth AND @EndYearMonth 
	ORDER BY T.DateKey
	 
	SELECT
		TB.DateKey,
		ActualIncome,
		ActualSpending
	FROM @TempBudget TB
	WHERE TB.DateKey BETWEEN @StartYearMoth AND @EndYearMonth 
	
END
GO
PRINT N'Creating [Reports].[Budgeting_CategoriesForDateRange_00]...';


GO
-- =============================================
-- Author:		Eun Eby
-- Create date: 08-07-2014
-- Description:	Budget Category Budget
-- =============================================
CREATE PROCEDURE [Reports].[Budgeting_CategoriesForDateRange_00]
	@UserId UNIQUEIDENTIFIER,
	@FromDate DATE,
	@EndDate DATE
AS
BEGIN
	SET NOCOUNT ON;
	SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;
 
    
	DECLARE @StartYearMoth VARCHAR(6)=(CAST(YEAR(@FromDate) AS CHAR(4)) + RIGHT('00' + LTRIM(MONTH(@FromDate)),2)) 
	DECLARE @EndYearMonth VARCHAR(6)=(CAST(YEAR(@EndDate) AS CHAR(4)) + RIGHT('00' + LTRIM(MONTH(@EndDate)),2)) 

	SELECT
		BT.[Year],
		BT.[Month],
		BT.[EstimatedSpending],
		'TOTAL' AS [Description],
		CAST(CAST(0 AS BINARY) AS UNIQUEIDENTIFIER) AS CategoryTemplateID
	FROM [freebyTrack].[Budgets] BT
	WHERE BT.OwnerID=@UserId 
		AND CAST(BT.[Year] as char(4)) + RIGHT('00' + LTRIM(BT.[Month]),2) BETWEEN @StartYearMoth AND @EndYearMonth 
	UNION ALL
	SELECT
		B.[Year],
		B.[Month],
		BC.[CategorySpent],
		BCT.[Description],
		BC.CategoryTemplateID
	FROM [freebyTrack].[Budgets] B
	JOIN [freebyTrack].[BudgetCategories] BC 
		ON B.ID=BC.BudgetID
	JOIN [freebyTrack].[BudgetCategoryTemplates] BCT
		ON BCT.ID=BC.CategoryTemplateID
	WHERE B.OwnerID=@UserId
		AND CAST([Year] as char(4)) + RIGHT('00' + LTRIM([Month]),2) BETWEEN @StartYearMoth AND @EndYearMonth
	ORDER BY [Year] ASC,[Month] ASC,CategoryTemplateID ASC

END
GO
PRINT N'Creating [Reports].[Budgeting_CategoriesForDateRange]...';


GO
-- =============================================
-- Author:		Eun Eby
-- Create date: 08-07-2014
-- Description:	Budget Category Budget
--
-- Updated:		Eun & James Eby / 8-15-2014
-- Description:	Updated format to be useful for
--				HighCharts.
--
-- Updated:		James Eby / 8-31-2014
-- Description:	Added more summation data.
-- =============================================
CREATE PROCEDURE [Reports].[Budgeting_CategoriesForDateRange]
	@UserId UNIQUEIDENTIFIER,
	@StartDate DATE,
	@EndDate DATE
AS
BEGIN
	SET NOCOUNT ON;
	SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;
 
    
	DECLARE @TempBudget AS TABLE(
		BudgetId UNIQUEIDENTIFIER,
		DateKey NVARCHAR(8),
		DisplayDate NVARCHAR(8),
		ActualSpending DECIMAL(18,2)) 

	DECLARE @StartYearMoth NVARCHAR(6)=(CAST(YEAR(@StartDate) AS NCHAR(4)) + RIGHT('00' + LTRIM(MONTH(@StartDate)),2)) 
	DECLARE @EndYearMonth NVARCHAR(6)=(CAST(YEAR(@EndDate) AS NCHAR(4)) + RIGHT('00' + LTRIM(MONTH(@EndDate)),2)) 


	--capture records by given userid and insert into temp table
	INSERT INTO @TempBudget
	SELECT 
		ID,  
		CAST([Year] AS NVARCHAR)+ RIGHT('00' + LTRIM([Month]),2),
		RIGHT('00' + LTRIM([Month]),2) +'/' +CAST([Year] AS NVARCHAR),
		ActualSpending
	FROM [freebyTrack].[Budgets] B
	WHERE OwnerID=@UserId
 
	DECLARE @totalSpent DECIMAL(18, 2)
	SELECT @totalSpent = SUM(TB.ActualSpending)
	FROM @TempBudget TB
	WHERE TB.DateKey BETWEEN @StartYearMoth AND @EndYearMonth 
 
	DECLARE @Subtitle AS NVARCHAR(128);
	SET @Subtitle = 'Between ' + DATENAME(m, @StartDate) + ' of ' + DATENAME(yyyy, @StartDate) + ' and ' + DATENAME(m, @EndDate) + ' of ' + DATENAME(yyyy, @EndDate)
 
	(
	SELECT 'Total Budget Spending by Month' as Title, @SubTitle as Subtitle, 0 as DisplayIndex
	UNION
	SELECT 'Breakdown of Spending for All Categories by Month' as Title, @SubTitle as Subtitle, 1 as DisplayIndex
	UNION
	SELECT 'Overall Budget Spending by Categeory' as Title, CAST(@totalSpent as NVARCHAR(18)) + ' Spent ' + @SubTitle as Subtitle, 2 as DisplayIndex
	)
	ORDER BY DisplayIndex
 
	SELECT  T.DateKey, T.DisplayDate
	FROM @TempBudget T
	WHERE T.DateKey BETWEEN @StartYearMoth AND @EndYearMonth 
	GROUP BY T.DateKey, T.DisplayDate
	 
	SELECT
		TB.DateKey,
		--TB.Category,
		'All Categories' AS [Description],
		TB.ActualSpending as Amount,
		CAST(CAST(0 AS BINARY) AS UNIQUEIDENTIFIER) AS ID
	FROM @TempBudget TB
	WHERE TB.DateKey BETWEEN @StartYearMoth AND @EndYearMonth 
		
	SELECT
		TB.DateKey,
		--TB.Category,
		BCT.[Description],
		BC.[CategorySpent] AS Amount,
		BC.CategoryTemplateID AS ID
	FROM @TempBudget TB
	JOIN [freebyTrack].[BudgetCategories] BC 
		ON TB.BudgetId=BC.BudgetID
	JOIN [freebyTrack].[BudgetCategoryTemplates] BCT
		ON BCT.ID=BC.CategoryTemplateID
	WHERE TB.DateKey BETWEEN @StartYearMoth AND @EndYearMonth
		AND bct.IsIncomeCategory=0
	ORDER BY ID, DateKey

END
GO
PRINT N'Creating [Reports].[Accounting_ActualsForDateRange]...';


GO
-- =============================================
-- Author:		Eun Eby
-- Create date: 08-07-2014
-- Description:	Get Acount Line Items by Account ID
-- =============================================
CREATE PROCEDURE [Reports].[Accounting_ActualsForDateRange]
	@UserId UNIQUEIDENTIFIER,
	@AccountId UNIQUEIDENTIFIER,
	@StartDate DATE,
	@EndDate DATE
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;

	IF OBJECT_ID('tempdb..#AccountResults') IS NOT NULL
		DROP TABLE #AccountResults	
	
    -- Insert statements for procedure here
	SELECT 
		AAT.ID,
		AAT.[Description], -- AS TypeDescription, 
		--AA.[Description],
		CAST(DATEPART(year, AA.RelevantOn) AS NVARCHAR)+ RIGHT('00' + LTRIM(DATEPART(month, AA.RelevantOn)),2) as DateKey,
		RIGHT('00' + LTRIM(DATEPART(month, AA.RelevantOn)),2) +'/' +CAST(DATEPART(year, AA.RelevantOn) AS NVARCHAR) as DisplayDate,
		AA.RelevantOn,
		CASE AAT.IsDeposit
		WHEN 1 THEN AA.Amount
		ELSE AA.Amount * -1
		END as Amount,
		AAT.IsDeposit
	INTO #AccountResults
	FROM freebyTrack.Accounts A
	JOIN freebyTrack.AccountCategories AC
		ON AC.AccountID=A.ID
	JOIN freebyTrack.AccountActuals AA
		ON AA.CategoryID=AC.ID
	JOIN freebyTrack.AccountActualTemplates AAT
		ON AAT.ID=AA.ActualTemplateID
	WHERE A.OwnerID=@UserId
		AND A.ID=@AccountId
		AND AA.RelevantOn BETWEEN @StartDate AND @EndDate
	ORDER BY AA.RelevantOn
	
	DECLARE @Subtitle AS NVARCHAR(128);
	SET @Subtitle = 'Between ' + DATENAME(m, @StartDate) + ' of ' + DATENAME(yyyy, @StartDate) + ' and ' + DATENAME(m, @EndDate) + ' of ' + DATENAME(yyyy, @EndDate)
 
	DECLARE @totalCredits DECIMAL(18, 2), @totalDebits DECIMAL(18, 2)
 
	SELECT @totalCredits = SUM(Amount)
	FROM #AccountResults
	WHERE IsDeposit = 1
	
	SELECT @totalDebits = SUM(Amount * -1)
	FROM #AccountResults
	WHERE IsDeposit = 0
	
	(
	SELECT 'Total Account Value by Month' as Title, @SubTitle as Subtitle, 0 as DisplayIndex
	UNION
	SELECT 'Breakdown of Account Activity by Month' as Title, @SubTitle as Subtitle, 1 as DisplayIndex
	UNION
	SELECT 'Overall Account Deposits, Payments and Credits by Type' as Title, CAST(@totalCredits as NVARCHAR(18)) + ' Credited to Account ' + @SubTitle as Subtitle, 2 as DisplayIndex
	UNION
	SELECT 'Overall Account Withdrawls and Debits by Type' as Title, CAST(@totalDebits as NVARCHAR(18)) + ' Debited from Account ' + @SubTitle as Subtitle, 3 as DisplayIndex
	)
	ORDER BY DisplayIndex
	
	DECLARE @PreviousBalanceDate DATE = DATEADD(DAY, -1, @StartDate)
	
	DECLARE @PreviousBalance DECIMAL(18,2) = freebyTrack.Accounting_GetAccountBalance(@AccountId, @PreviousBalanceDate)
	
	SELECT 
		'Previous Balance' as [Description],
		@PreviousBalanceDate as RelevantOn,
		@PreviousBalance as Amount
	
	SELECT DISTINCT DateKey, DisplayDate
	FROM #AccountResults
	GROUP BY DateKey, DisplayDate
	ORDER BY DateKey
	
	SELECT 
		DateKey,
		[Description],
		SUM(Amount) as Amount,
		ID,
		IsDeposit
	FROM #AccountResults
	GROUP BY DateKey, [Description], ID, IsDeposit
	ORDER BY ID, DateKey
	
	--SELECT * FROM #AccountResults
	--ORDER BY RelevantOn
	
	IF OBJECT_ID('tempdb..#AccountResults') IS NOT NULL
		DROP TABLE #AccountResults
END
GO
PRINT N'Creating [Reports].[Budgeting_ItemsInCategoryForDateRange_01]...';


GO
-- =============================================
-- Author:		Eun Eby
-- Create date: 08-07-2014
-- Description:	Get Line Item by Category
--
-- Updated:		James Eby / 8/15/2014
-- Description:	Updated format to be useful for
--				HighCharts.
-- =============================================
create PROCEDURE [Reports].[Budgeting_ItemsInCategoryForDateRange_01]
	@UserId UNIQUEIDENTIFIER,
	@BudgetCategoryTemplateId UNIQUEIDENTIFIER,
	@StartDate DATE,
	@EndDate DATE
AS
BEGIN
	SET NOCOUNT ON;
	SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;
 
	DECLARE @Subtitle AS NVARCHAR(128);
	SET @Subtitle = 'From ' + DATENAME(m, @StartDate) + ' of ' + DATENAME(yyyy, @StartDate) + ' to ' + DATENAME(m, @EndDate) + ' of ' + DATENAME(yyyy, @EndDate)
 
	SELECT 'line' as ChartType, BCT.[Description] + ' Spending Breakdown' as Title, @SubTitle as Subtitle
	FROM [freebyTrack].[BudgetCategoryTemplates] BCT 
	WHERE BCT.[ID]=@BudgetCategoryTemplateId
     
	DECLARE @StartYearMoth NVARCHAR(6)=(CAST(YEAR(@StartDate) AS NCHAR(4)) + RIGHT('00' + LTRIM(MONTH(@StartDate)),2)) 
	DECLARE @EndYearMonth NVARCHAR(6)=(CAST(YEAR(@EndDate) AS NCHAR(4)) + RIGHT('00' + LTRIM(MONTH(@EndDate)),2)) 
    
	SELECT 
		CAST(B.[Year] as nchar(4)) + RIGHT('00' + LTRIM(B.[Month]),2) as Sort,
		CAST(B.[Month] as nvarchar(2)) + '/' + CAST(B.[Year] as nchar(4)) as Category,
		BCT.[Description],
		BC.CategorySpent AS Amount,
		CAST(CAST(0 AS BINARY) AS UNIQUEIDENTIFIER) AS ID
	FROM [freebyTrack].[BudgetCategoryTemplates] BCT 
		JOIN [freebyTrack].[BudgetCategories] BC
			ON BCT.[ID]=BC.CategoryTemplateID
		JOIN [freebyTrack].[Budgets] B
			ON B.ID=BC.BudgetID
	WHERE B.OwnerID=@UserId 
		AND BCT.[ID]=@BudgetCategoryTemplateId
		AND CAST(B.[Year] as nchar(4)) + RIGHT('00' + LTRIM(B.[Month]),2) BETWEEN @StartYearMoth AND @EndYearMonth 
	UNION ALL
	SELECT 
		CAST(B.[Year] as nchar(4)) + RIGHT('00' + LTRIM(B.[Month]),2) as Sort,
		CAST(B.[Month] as nvarchar(2)) + '/' + CAST(B.[Year] as nchar(4)) as Category,
		BT.[Description],
		SUM(BI.[ItemSpent]) AS Amount,
		BT.ID 
	FROM [freebyTrack].[BudgetCategoryTemplates] BCT 
		JOIN [freebyTrack].[BudgetCategories] BC
			ON BCT.[ID]=BC.CategoryTemplateID
		JOIN [freebyTrack].[BudgetItems] BI
			ON BI.CategoryID=BC.[ID]
		JOIN [freebyTrack].[BudgetItemTemplates] BT
			ON BI.ItemTemplateID=BT.[ID]
		JOIN [freebyTrack].[Budgets] B
			ON B.ID=BC.BudgetID
	WHERE B.OwnerID=@UserId 
		AND BCT.[ID]=@BudgetCategoryTemplateId
		AND CAST(B.[Year] as nchar(4)) + RIGHT('00' + LTRIM(B.[Month]),2) BETWEEN @StartYearMoth AND @EndYearMonth 
	GROUP BY CAST(B.[Year] as nchar(4)) + RIGHT('00' + LTRIM(B.[Month]),2),
		CAST(B.[Month] as nvarchar(2)) + '/' + CAST(B.[Year] as nchar(4)),
		BT.[Description], BT.[ID]
	ORDER BY Sort, ID
	
END
GO
PRINT N'Creating [Reports].[Budgeting_ItemsInCategoryForDateRange_00]...';


GO
-- =============================================
-- Author:		Eun Eby
-- Create date: 08-07-2014
-- Description:	Get Line Item by Category
-- =============================================
CREATE PROCEDURE [Reports].[Budgeting_ItemsInCategoryForDateRange_00]
	@UserId UNIQUEIDENTIFIER,
	@CategoryTemplateId UNIQUEIDENTIFIER,
	@StartDate DATE,
	@EndDate DATE
AS
BEGIN
	SET NOCOUNT ON;
	SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;
 
	DECLARE @Subtitle AS NVARCHAR(128);
	SET @Subtitle = 'From ' + DATENAME(m, @StartDate) + ' of ' + DATENAME(yyyy, @StartDate) + ' to ' + DATENAME(m, @EndDate) + ' of ' + DATENAME(yyyy, @EndDate)
 
	SELECT 'line' as ChartType, BCT.[Description] + ' Spending Breakdown' as Title, @SubTitle as Subtitle
	FROM [freebyTrack].[BudgetCategoryTemplates] BCT 
	WHERE BCT.[ID]=@CategoryTemplateId
     
	DECLARE @StartYearMoth VARCHAR(6)=(CAST(YEAR(@StartDate) AS CHAR(4)) + RIGHT('00' + LTRIM(MONTH(@StartDate)),2)) 
	DECLARE @EndYearMonth VARCHAR(6)=(CAST(YEAR(@EndDate) AS CHAR(4)) + RIGHT('00' + LTRIM(MONTH(@EndDate)),2)) 
    
	SELECT 
		B.[Year],
		B.[Month],
		BCT.[Description],
		BC.CategorySpent AS Spent,
		CAST(CAST(0 AS BINARY) AS UNIQUEIDENTIFIER) AS ID
	FROM [freebyTrack].[BudgetCategoryTemplates] BCT 
		JOIN [freebyTrack].[BudgetCategories] BC
			ON BCT.[ID]=BC.CategoryTemplateID
		JOIN [freebyTrack].[Budgets] B
			ON B.ID=BC.BudgetID
	WHERE B.OwnerID=@UserId 
		AND BCT.[ID]=@CategoryTemplateId
		AND CAST(B.[Year] as char(4)) + RIGHT('00' + LTRIM(B.[Month]),2) BETWEEN @StartYearMoth AND @EndYearMonth 
	UNION ALL
	SELECT 
		B.[Year],
		B.[Month],
		BT.[Description],
		SUM(BI.[ItemSpent]) AS Spent,
		BT.ID 
	FROM [freebyTrack].[BudgetCategoryTemplates] BCT 
		JOIN [freebyTrack].[BudgetCategories] BC
			ON BCT.[ID]=BC.CategoryTemplateID
		JOIN [freebyTrack].[BudgetItems] BI
			ON BI.CategoryID=BC.[ID]
		JOIN [freebyTrack].[BudgetItemTemplates] BT
			ON BI.ItemTemplateID=BT.[ID]
		JOIN [freebyTrack].[Budgets] B
			ON B.ID=BC.BudgetID
	WHERE B.OwnerID=@UserId 
		AND BCT.[ID]=@CategoryTemplateId
		AND CAST(B.[Year] as char(4)) + RIGHT('00' + LTRIM(B.[Month]),2) BETWEEN @StartYearMoth AND @EndYearMonth 
	GROUP BY B.[Year], B.[Month],BT.[Description], BT.[ID]
	ORDER BY [Year],[Month], ID
	
END
GO
/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/

IF NOT EXISTS (SELECT TOP 1 Id FROM Lookups.Applications)
BEGIN
	INSERT INTO [Lookups].[Applications] ([ID], [Name], [CreatedOn], [CreatedBy], [ModifiedOn], [ModifiedBy]) VALUES (4, N'trackItsValue API', '20140126 00:48:18.647', N'James', NULL, NULL)
	INSERT INTO [Lookups].[Applications] ([ID], [Name], [CreatedOn], [CreatedBy], [ModifiedOn], [ModifiedBy]) VALUES (5, N'trackItsValue.com Website', '20140306 16:10:00.000', N'James', NULL, NULL)
	INSERT INTO [Lookups].[Applications] ([ID], [Name], [CreatedOn], [CreatedBy], [ModifiedOn], [ModifiedBy]) VALUES (6, N'freebyRunner Alerts Task', '20170608 00:30:00.000', N'James', NULL, NULL)
END
IF NOT EXISTS (SELECT TOP 1 Id FROM Lookups.ReportCategories)
BEGIN
	SET IDENTITY_INSERT [Lookups].[ReportCategories] ON
	INSERT INTO [Lookups].[ReportCategories] ([ID], [Name], [DisplayIndex], [CreatedOn], [CreatedBy], [ModifiedOn], [ModifiedBy]) VALUES (1, N'Budget Reports', 0, '20140807 12:03:00.000', N'James', NULL, NULL)
	INSERT INTO [Lookups].[ReportCategories] ([ID], [Name], [DisplayIndex], [CreatedOn], [CreatedBy], [ModifiedOn], [ModifiedBy]) VALUES (2, N'Account Reports', 1, '20140807 12:03:00.000', N'James', NULL, NULL)
	SET IDENTITY_INSERT [Lookups].[ReportCategories] OFF
END

IF NOT EXISTS (SELECT TOP 1 Id FROM Applications.Menus)
BEGIN
	INSERT INTO [Applications].[Menus] ([ApplicationID], [ID], [MenuID], [Description], [Icon], [ParentID], [DisplayIndex], [ngApp], [serverRoute], [ngRoute], [ShowSubMenu], [GroupAssociation], [CreatedOn], [CreatedBy], [ModifiedOn], [ModifiedBy]) VALUES (5, N'58677ab2-c7a8-e311-821b-00215e73190e', 1, N'Manage', N'icon-money', NULL, 1, NULL, NULL, NULL, 1, 1, '20140310 20:18:00.000', N'James', NULL, NULL)
	INSERT INTO [Applications].[Menus] ([ApplicationID], [ID], [MenuID], [Description], [Icon], [ParentID], [DisplayIndex], [ngApp], [serverRoute], [ngRoute], [ShowSubMenu], [GroupAssociation], [CreatedOn], [CreatedBy], [ModifiedOn], [ModifiedBy]) VALUES (5, N'ecaef3dc-c7a8-e311-821b-00215e73190e', 2, N'Track', N'icon-bar-chart', NULL, 2, NULL, NULL, NULL, 1, 1, '20140310 21:49:00.000', N'James', NULL, NULL)
	INSERT INTO [Applications].[Menus] ([ApplicationID], [ID], [MenuID], [Description], [Icon], [ParentID], [DisplayIndex], [ngApp], [serverRoute], [ngRoute], [ShowSubMenu], [GroupAssociation], [CreatedOn], [CreatedBy], [ModifiedOn], [ModifiedBy]) VALUES (5, N'ed243efa-c7a8-e311-821b-00215e73190e', 3, N'Settings', N'icon-user', NULL, 4, NULL, NULL, NULL, 1, 2, '20140310 21:50:00.000', N'James', NULL, NULL)
	INSERT INTO [Applications].[Menus] ([ApplicationID], [ID], [MenuID], [Description], [Icon], [ParentID], [DisplayIndex], [ngApp], [serverRoute], [ngRoute], [ShowSubMenu], [GroupAssociation], [CreatedOn], [CreatedBy], [ModifiedOn], [ModifiedBy]) VALUES (5, N'3013020f-c8a8-e311-821b-00215e73190e', 4, N'Sandbox', N'icon-beer', NULL, 5, NULL, NULL, NULL, 1, 2, '20140310 21:51:00.000', N'James', NULL, NULL)
	INSERT INTO [Applications].[Menus] ([ApplicationID], [ID], [MenuID], [Description], [Icon], [ParentID], [DisplayIndex], [ngApp], [serverRoute], [ngRoute], [ShowSubMenu], [GroupAssociation], [CreatedOn], [CreatedBy], [ModifiedOn], [ModifiedBy]) VALUES (5, N'e1fa697d-3aaa-4300-b31e-bdaac08befff', 16, N'News & Info', N'icon-info-sign', NULL, 0, NULL, NULL, NULL, 1, 4, '20140517 14:26:00.000', N'James', NULL, NULL)
	INSERT INTO [Applications].[Menus] ([ApplicationID], [ID], [MenuID], [Description], [Icon], [ParentID], [DisplayIndex], [ngApp], [serverRoute], [ngRoute], [ShowSubMenu], [GroupAssociation], [CreatedOn], [CreatedBy], [ModifiedOn], [ModifiedBy]) VALUES (5, N'c8d44eae-fbb4-e511-86ac-00215e73190e', 20, N'Verify', N'icon-check', NULL, 3, N'freebyVerify', N'Verify', N'verifyTransactionsOverview', 0, 2, '20160106 23:01:00.000', N'James', NULL, NULL)
	INSERT INTO [Applications].[Menus] ([ApplicationID], [ID], [MenuID], [Description], [Icon], [ParentID], [DisplayIndex], [ngApp], [serverRoute], [ngRoute], [ShowSubMenu], [GroupAssociation], [CreatedOn], [CreatedBy], [ModifiedOn], [ModifiedBy]) VALUES (5, N'1ff5d48a-b829-4e19-9e13-b118acd729e1', 5, N'My Budget', NULL, N'58677ab2-c7a8-e311-821b-00215e73190e', 0, N'freebyBudget', N'Budget', N'monthlyBudget', 0, 1, '20140329 11:50:00.000', N'James', NULL, NULL)
	INSERT INTO [Applications].[Menus] ([ApplicationID], [ID], [MenuID], [Description], [Icon], [ParentID], [DisplayIndex], [ngApp], [serverRoute], [ngRoute], [ShowSubMenu], [GroupAssociation], [CreatedOn], [CreatedBy], [ModifiedOn], [ModifiedBy]) VALUES (5, N'08f64d74-c9a8-e311-821b-00215e73190e', 9, N'My Reports', NULL, N'ecaef3dc-c7a8-e311-821b-00215e73190e', 0, N'freebyReport', N'Report', N'reports', 0, 1, '20140310 22:01:00.000', N'James', '20140803 12:31:00.000', N'James')
	INSERT INTO [Applications].[Menus] ([ApplicationID], [ID], [MenuID], [Description], [Icon], [ParentID], [DisplayIndex], [ngApp], [serverRoute], [ngRoute], [ShowSubMenu], [GroupAssociation], [CreatedOn], [CreatedBy], [ModifiedOn], [ModifiedBy]) VALUES (5, N'3daebe1f-f4ed-e311-821b-00215e73190e', 19, N'Help Videos', NULL, N'e1fa697d-3aaa-4300-b31e-bdaac08befff', 2, N'freebyPublicContent', N'PublicContent', N'helpVideos', 0, 4, '20140606 22:30:00.000', N'James', NULL, NULL)
	INSERT INTO [Applications].[Menus] ([ApplicationID], [ID], [MenuID], [Description], [Icon], [ParentID], [DisplayIndex], [ngApp], [serverRoute], [ngRoute], [ShowSubMenu], [GroupAssociation], [CreatedOn], [CreatedBy], [ModifiedOn], [ModifiedBy]) VALUES (5, N'5172376f-cf1a-e411-91eb-00215e73190e', 8, N'My Assets', NULL, N'58677ab2-c7a8-e311-821b-00215e73190e', 1, N'freebyBudget', N'Budget', N'featureComingSoon', 0, 2, '20140803 12:31:00.000', N'James', NULL, NULL)
	INSERT INTO [Applications].[Menus] ([ApplicationID], [ID], [MenuID], [Description], [Icon], [ParentID], [DisplayIndex], [ngApp], [serverRoute], [ngRoute], [ShowSubMenu], [GroupAssociation], [CreatedOn], [CreatedBy], [ModifiedOn], [ModifiedBy]) VALUES (5, N'620d71df-cba8-e311-821b-00215e73190e', 14, N'404', NULL, N'3013020f-c8a8-e311-821b-00215e73190e', 2, N'freebyError', N'Error', N'error404', 0, 2, '20140310 22:18:00.000', N'James', NULL, NULL)
	INSERT INTO [Applications].[Menus] ([ApplicationID], [ID], [MenuID], [Description], [Icon], [ParentID], [DisplayIndex], [ngApp], [serverRoute], [ngRoute], [ShowSubMenu], [GroupAssociation], [CreatedOn], [CreatedBy], [ModifiedOn], [ModifiedBy]) VALUES (5, N'62bc2c16-caa8-e311-821b-00215e73190e', 11, N'My Profile', NULL, N'ed243efa-c7a8-e311-821b-00215e73190e', 0, N'freebyBudget', N'Budget', N'featureComingSoon', 0, 2, '20140310 22:06:00.000', N'James', NULL, NULL)
	INSERT INTO [Applications].[Menus] ([ApplicationID], [ID], [MenuID], [Description], [Icon], [ParentID], [DisplayIndex], [ngApp], [serverRoute], [ngRoute], [ShowSubMenu], [GroupAssociation], [CreatedOn], [CreatedBy], [ModifiedOn], [ModifiedBy]) VALUES (5, N'6ca6010f-c9a8-e311-821b-00215e73190e', 7, N'My Accounts', NULL, N'58677ab2-c7a8-e311-821b-00215e73190e', 2, N'freebyAccount', N'Account', N'monthlyAccountsOverview', 0, 1, '20140310 21:58:00.000', N'James', NULL, NULL)
	INSERT INTO [Applications].[Menus] ([ApplicationID], [ID], [MenuID], [Description], [Icon], [ParentID], [DisplayIndex], [ngApp], [serverRoute], [ngRoute], [ShowSubMenu], [GroupAssociation], [CreatedOn], [CreatedBy], [ModifiedOn], [ModifiedBy]) VALUES (5, N'b28b37f5-cba8-e311-821b-00215e73190e', 15, N'500', NULL, N'3013020f-c8a8-e311-821b-00215e73190e', 3, N'freebyError', N'Error', N'error500', 0, 2, '20140310 22:19:00.000', N'James', NULL, NULL)
	INSERT INTO [Applications].[Menus] ([ApplicationID], [ID], [MenuID], [Description], [Icon], [ParentID], [DisplayIndex], [ngApp], [serverRoute], [ngRoute], [ShowSubMenu], [GroupAssociation], [CreatedOn], [CreatedBy], [ModifiedOn], [ModifiedBy]) VALUES (5, N'cbf2685f-caa8-e311-821b-00215e73190e', 13, N'Dashboard', NULL, N'3013020f-c8a8-e311-821b-00215e73190e', 1, N'freebySandboc', N'Sandbox', N'dashboard', 0, 2, '20140310 22:08:00.000', N'James', NULL, NULL)
	INSERT INTO [Applications].[Menus] ([ApplicationID], [ID], [MenuID], [Description], [Icon], [ParentID], [DisplayIndex], [ngApp], [serverRoute], [ngRoute], [ShowSubMenu], [GroupAssociation], [CreatedOn], [CreatedBy], [ModifiedOn], [ModifiedBy]) VALUES (5, N'e1fa697c-3aaa-4300-b31e-bdaac08befff', 17, N'News', NULL, N'e1fa697d-3aaa-4300-b31e-bdaac08befff', 1, N'freebyPublicContent', N'PublicContent', N'news', 0, 4, '20140517 14:29:00.000', N'James', NULL, NULL)
	INSERT INTO [Applications].[Menus] ([ApplicationID], [ID], [MenuID], [Description], [Icon], [ParentID], [DisplayIndex], [ngApp], [serverRoute], [ngRoute], [ShowSubMenu], [GroupAssociation], [CreatedOn], [CreatedBy], [ModifiedOn], [ModifiedBy]) VALUES (5, N'e1fa697e-3aaa-4300-b31e-bdaac08befff', 18, N'Welcome', NULL, N'e1fa697d-3aaa-4300-b31e-bdaac08befff', 0, N'freebyPublicContent', N'PublicContent', N'welcome', 0, 4, '20140529 22:45:00.000', N'James', NULL, NULL)
	INSERT INTO [Applications].[Menus] ([ApplicationID], [ID], [MenuID], [Description], [Icon], [ParentID], [DisplayIndex], [ngApp], [serverRoute], [ngRoute], [ShowSubMenu], [GroupAssociation], [CreatedOn], [CreatedBy], [ModifiedOn], [ModifiedBy]) VALUES (5, N'e78c3d41-caa8-e311-821b-00215e73190e', 12, N'Elements', NULL, N'3013020f-c8a8-e311-821b-00215e73190e', 0, N'freebySandbox', N'Sandbox', N'elements', 0, 2, '20140310 22:07:00.000', N'James', NULL, NULL)
END

--:r .\Security\Data\Security.Groups.sql
--:r .\Security\Data\Security.Users.sql


--:r .\PublicContent\Data\PublicContent.News.sql
--:r .\PublicContent\Data\PublicContent.PageContent.sql
--:r .\PublicContent\Data\PublicContent.Quotes.sql
--:r .\PublicContent\Data\PublicContent.VideoCategories.sql
--:r .\PublicContent\Data\PublicContent.Videos.sql

--:r .\Miscellaneous\Data\Miscellaneous.Configuration.sql

--:r .\Reports\Data\Reports.ReportControls.sql
--:r .\Reports\Data\Reports.Reports.sql

--:r .\freebyTrack\Data\freebyTrack.AccountTypes.sql
--:r .\freebyTrack\Data\freebyTrack.AccountTemplates.sql
--:r .\freebyTrack\Data\freebyTrack.AccountCategoryTemplates.sql
--:r .\freebyTrack\Data\freebyTrack.AccountActualTemplates.sql
--:r .\freebyTrack\Data\freebyTrack.BudgetCategoryTemplates.sql
--:r .\freebyTrack\Data\freebyTrack.BudgetItemTemplates.sql
GO

GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
ALTER TABLE [Applications].[Menus] WITH CHECK CHECK CONSTRAINT [FK_Menus_Applications];

ALTER TABLE [Applications].[Menus] WITH CHECK CHECK CONSTRAINT [FK_Menus_Menus];

ALTER TABLE [freebyTrack].[BudgetItemTemplates] WITH CHECK CHECK CONSTRAINT [FK_BudgetItemTemplates_AccountTemplates];

ALTER TABLE [freebyTrack].[BudgetItemTemplates] WITH CHECK CHECK CONSTRAINT [FK_BudgetItemTemplates_AccountTemplates1];

ALTER TABLE [freebyTrack].[BudgetItemTemplates] WITH CHECK CHECK CONSTRAINT [FK_BudgetItemTemplates_AccountTypes];

ALTER TABLE [freebyTrack].[BudgetItemTemplates] WITH CHECK CHECK CONSTRAINT [FK_BudgetItemTemplates_AccountTypes1];

ALTER TABLE [freebyTrack].[BudgetItemTemplates] WITH CHECK CHECK CONSTRAINT [FK_BudgetItemTemplates_BudgetCategoryTemplates];

ALTER TABLE [freebyTrack].[BudgetItemTemplates] WITH CHECK CHECK CONSTRAINT [FK_BudgetItemTemplates_Users];

ALTER TABLE [freebyTrack].[BudgetItems] WITH CHECK CHECK CONSTRAINT [FK_BudgetItems_AccountCategories];

ALTER TABLE [freebyTrack].[BudgetItems] WITH CHECK CHECK CONSTRAINT [FK_BudgetItems_Accounts];

ALTER TABLE [freebyTrack].[BudgetItems] WITH CHECK CHECK CONSTRAINT [FK_BudgetItems_BudgetCategories];

ALTER TABLE [freebyTrack].[BudgetItems] WITH CHECK CHECK CONSTRAINT [FK_BudgetItems_BudgetItemAlerts];

ALTER TABLE [freebyTrack].[BudgetItems] WITH CHECK CHECK CONSTRAINT [FK_BudgetItems_BudgetItemRecurringSettings];

ALTER TABLE [freebyTrack].[BudgetItems] WITH CHECK CHECK CONSTRAINT [FK_BudgetItems_BudgetItemTemplates];

ALTER TABLE [freebyTrack].[BudgetCategoryTemplates] WITH CHECK CHECK CONSTRAINT [FK_BudgetCategoryTemplates_Users];

ALTER TABLE [freebyTrack].[BudgetCategories] WITH CHECK CHECK CONSTRAINT [FK_BudgetCategories_Budget];

ALTER TABLE [freebyTrack].[BudgetCategories] WITH CHECK CHECK CONSTRAINT [FK_BudgetCategories_BudgetCategoryTemplates];

ALTER TABLE [freebyTrack].[BudgetActuals] WITH CHECK CHECK CONSTRAINT [FK_BudgetActuals_BudgetItems];

ALTER TABLE [freebyTrack].[AccountTemplates] WITH CHECK CHECK CONSTRAINT [FK_AccountTemplates_AccountTypes];

ALTER TABLE [freebyTrack].[AccountTemplates] WITH CHECK CHECK CONSTRAINT [FK_AccountTemplates_Users];

ALTER TABLE [freebyTrack].[Accounts] WITH CHECK CHECK CONSTRAINT [FK_Accounts_AccountTemplates];

ALTER TABLE [freebyTrack].[Accounts] WITH CHECK CHECK CONSTRAINT [FK_Accounts_AccountTypes];

ALTER TABLE [freebyTrack].[Accounts] WITH CHECK CHECK CONSTRAINT [FK_Accounts_Users];

ALTER TABLE [freebyTrack].[AccountCategoryTemplates] WITH CHECK CHECK CONSTRAINT [FK_AccountCategoryTemplates_AccountTemplates];

ALTER TABLE [freebyTrack].[AccountCategoryTemplates] WITH CHECK CHECK CONSTRAINT [FK_AccountCategoryTemplates_Users];

ALTER TABLE [freebyTrack].[AccountCategories] WITH CHECK CHECK CONSTRAINT [FK_AccountCategories_AccountCategoryTemplates];

ALTER TABLE [freebyTrack].[AccountCategories] WITH CHECK CHECK CONSTRAINT [FK_AccountCategories_Accounts];

ALTER TABLE [freebyTrack].[AccountActualTemplates] WITH CHECK CHECK CONSTRAINT [FK_AccountActualTemplates_AccountTemplates];

ALTER TABLE [freebyTrack].[AccountActualTemplates] WITH CHECK CHECK CONSTRAINT [FK_AccountActualTemplates_Users];

ALTER TABLE [freebyTrack].[AccountActuals] WITH CHECK CHECK CONSTRAINT [FK_AccountActuals_AccountActualTemplates];

ALTER TABLE [freebyTrack].[AccountActuals] WITH CHECK CHECK CONSTRAINT [FK_AccountActuals_AccountCategories];

ALTER TABLE [freebyTrack].[AccountActuals] WITH CHECK CHECK CONSTRAINT [FK_AccountActuals_BudgetActuals];

ALTER TABLE [freebyTrack].[AccountActualRecurrences] WITH CHECK CHECK CONSTRAINT [FK_AccountActualRecurrences_AccountActualTemplates];

ALTER TABLE [freebyTrack].[AccountActualRecurrences] WITH CHECK CHECK CONSTRAINT [FK_AccountActualRecurrences_Accounts];

ALTER TABLE [Miscellaneous].[Configurations] WITH CHECK CHECK CONSTRAINT [FK_Configurations_Applications];

ALTER TABLE [PublicContent].[News] WITH CHECK CHECK CONSTRAINT [FK_News_Users];

ALTER TABLE [PublicContent].[Videos] WITH CHECK CHECK CONSTRAINT [FK_Videos_VideoCategories];

ALTER TABLE [Reports].[Reports] WITH CHECK CHECK CONSTRAINT [FK_Reports_ReportCategories];

ALTER TABLE [Reports].[ReportControls] WITH CHECK CHECK CONSTRAINT [FK_ReportControls_Reports];

ALTER TABLE [Security].[UserSettings] WITH CHECK CHECK CONSTRAINT [FK_UserSettings_Applications];

ALTER TABLE [Security].[UserSettings] WITH CHECK CHECK CONSTRAINT [FK_UserSettings_Users];


GO
PRINT N'Update complete.';


GO
